{"version":3,"file":"static/js/636.94c31d40.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","components/GenresSelect/GenresSelect.jsx","components/MoviesBanner/MoviesBanner.styled.jsx","components/MoviesBanner/MoviesBanner.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport DebounceInput from 'react-debounce-input';\nimport { HiMagnifyingGlass } from 'react-icons/hi2';\n\nexport const SearchForm = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 30px;\n\n  width: 100%;\n\n  max-width: 20.4rem;\n  height: 2.2rem;\n\n  backdrop-filter: blur(2px);\n  color: #fff;\n  outline: 0;\n  border: 0;\n  border-radius: 30px;\n\n  box-shadow: 1px 1px 1px #f84119, 1px 1px 1px #fff;\n\n  overflow: hidden;\n`;\n\nexport const Icon = styled(HiMagnifyingGlass)`\n  position: absolute;\n  right: -5px;\n  margin-right: 10px;\n  width: 20px;\n  height: 20px;\n\n  fill: ${props => props.theme.colors.accent};\n  stroke: ${props => props.theme.colors.white};\n  stroke-width: 1px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 34px;\n  height: 34px;\n  border: 0;\n  border-radius: 50%;\n\n  background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    fill: ${props => props.theme.colors.accent};\n    stroke: ${props => props.theme.colors.white};\n    stroke-width: 1px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n      transform: scale(1.2);\n    }\n  }\n`;\n\nexport const SearchFormInput = styled(DebounceInput)`\n  display: inline-block;\n  width: 100%;\n  min-height: 34px;\n\n  border-radius: 0.1rem;\n\n  font: inherit;\n\n  font-size: 1.2rem;\n\n  border: none;\n  outline: none;\n\n  padding-left: ${props => props.theme.space[5]}px;\n  padding-right: ${props => props.theme.space[3]}px;\n\n  background: none;\n\n  color: ${props => props.theme.colors.accent};\n  letter-spacing: 1.4px;\n\n  :focus {\n    outline: none;\n  }\n\n  ::placeholder {\n    text-align: center;\n    color: #fd5523;\n    font-size: 20px;\n    font-family: ${props => props.theme.fonts.heading};\n    letter-spacing: 1.3px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport {\n  Icon,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ value, onChange }) => {\n  const { t } = useTranslation();\n  return (\n    <SearchForm>\n      <SearchFormInput\n        type=\"text\"\n        value={value}\n        debounceTimeout={500}\n        onChange={onChange}\n        placeholder={t('moviesPage.placeholder_search')}\n      />\n      <SearchFormBtn type=\"submit\">\n        <Icon size=\"24\" />\n      </SearchFormBtn>\n    </SearchForm>\n  );\n};\n\nSearchbar.propType = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  t: PropTypes.any.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MoviesBlock = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  padding-bottom: ${({ theme }) => theme.space[5]}px;\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  padding-right: ${({ theme }) => theme.space[4]}px;\n  margin-bottom: 64px;\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n\n  border: none;\n  border-radius: ${props => props.theme.radii.normal};\n\n  font-size: ${props => props.theme.fontSizes.m};\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  background-color: ${props => props.theme.colors.secondary};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(0.8);\n  }\n`;\n\nexport const AvatarWrap = styled.div`\n  display: inline-block;\n  margin-bottom: 15px;\n\n  width: 125px;\n  height: 125px;\n  border-radius: 50%;\n\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center top;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\n//--------------------------------------------------\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n    opacity: 0.5;\n  }\n`;\nexport const BgBlockActors = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    opacity: 0.5;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const BackdropActors = styled.div`\n  padding-top: 84px;\n  padding-bottom: 84px;\n  width: 100%;\n  height: 100px;\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const SectionHero = styled.section`\n  position: relative;\n\n  margin-top: -50px;\n  margin-bottom: 30px;\n\n  padding-top: 84px;\n  padding-bottom: 84px;\n`;\n\nexport const SectionActors = styled.section`\n  position: relative;\n\n  margin-bottom: -180px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const BlockInfoActors = styled.div`\n  position: relative;\n  z-index: 50;\n  margin-bottom: -110px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const HeroContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin: 0 auto;\n  padding: 0;\n\n  width: 100%;\n  height: 750px;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ActorName = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\nexport const Known = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n  opacity: 0.5;\n`;\n\nexport const TitleList = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n\n  width: 100%;\n  height: 4rem;\n\n  backdrop-filter: blur(0.7125rem);\n\n  text-align: center;\n  color: ${({ theme }) => theme.text};\n\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n\nexport const SmallText = styled.p`\n  position: relative;\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.s};\n  font-style: italic;\n  opacity: 0.5;\n`;\n\nexport const GradientBlockBottomActors = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 350px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n","import PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { useTranslation } from 'react-i18next';\n\nconst animatedComponents = makeAnimated();\n\nexport const GenresSelect = ({ onSelect, genres, isLoading }) => {\n  const { t } = useTranslation();\n\n  const customStyles = {\n    option: (defaultStyles, state) => ({\n      ...defaultStyles,\n      fontSize: '14px',\n      color: state.isSelected ? '#212529' : '#fd5523',\n      background: state.isSelected\n        ? 'linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%)'\n        : '#FFFBE6',\n    }),\n\n    control: defaultStyles => ({\n      ...defaultStyles,\n      background: 'linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%)',\n      border: 'none',\n      boxShadow: 'none',\n    }),\n    singleValue: defaultStyles => ({\n      ...defaultStyles,\n      color: '#FFF',\n      background: 'linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%)',\n      borderRadius: '30px',\n      maxWidth: '45%',\n      padding: '5px 10px',\n      marginLeft: '30px',\n    }),\n  };\n\n  const options = genres?.map(genre => ({\n    value: genre.id,\n    label: genre.name,\n  }));\n\n  return (\n    <>\n      <Select\n        options={options}\n        isLoading={isLoading}\n        onChange={option => (!option ? '' : onSelect(option.value))}\n        placeholder={t('moviesPage.placeholder_genres')}\n        components={animatedComponents}\n        isClearable={true}\n        styles={customStyles}\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n      />\n    </>\n  );\n};\n\nGenresSelect.propTypes = {\n  genres: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink as MovieLink } from 'react-router-dom';\n\nexport const BackdropContainer = styled.section`\n  position: relative;\n\n  margin: 0 auto;\n  margin-top: -80px;\n  padding: 0;\n\n  width: 100%;\n  height: 550px;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  background-image: ;\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const BackdropPoster = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  flex: 1 0 auto;\n  background-color: rgba(0, 0, 0, 1);\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top center;\n  }\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 550px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const ItemMovies = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n  width: 100%;\n  height: 550px;\n  overflow: hidden;\n  background: color: ${({ theme }) => theme.body};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n     gap: 10px;\n    flex-direction: row;\n  }\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 25;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n\n  padding: 8px;\n  width: 100%;\n  backdrop-filter: blur(10.5px);\n  border-radius: 8px;\n  border: none: outline: none;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n    width: 35%;\n  }\n`;\n\nexport const Reviews = styled.p`\n  color: ${({ theme }) => theme.text};\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: 1.5px;\n\n  @media screen and (min-width: 480px) {\n    font-size: 14px;\n  }\n`;\n\nexport const NavLink = styled(MovieLink)`\n  position: relative;\n  z-index: 9;\n  padding: 8px 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 128px;\n  height: 40px;\n  border-radius: 74px;\n\n  text-decoration: none;\n  color: ${({ theme }) => theme.text};\n  text-shadow: 0 0.4px 0.4px #fff, inset 40px 40px 40px #fff;\n  font-size: 12px;\n  font-weight: 500;\n  background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n\n  &.active {\n    color: #fff;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${({ theme }) => theme.text};\n  }\n\n  @media screen and (min-width: 480px) {\n    font-size: 14px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Rating } from '@mui/material';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Title } from 'components/Title/Title';\nimport {\n  BackdropContainer,\n  BackdropPoster,\n  Content,\n  GradientBlockBottom,\n  GradientBlockTop,\n  ItemMovies,\n  NavLink,\n  Reviews,\n} from './MoviesBanner.styled';\nimport { useEffect, useState } from 'react';\nimport { getNowPlayingMovies } from 'services/themoviedbAPI';\nimport { useTranslation } from 'react-i18next';\nimport { Loader } from 'components/Loader/Loader';\nimport Error from 'assets/error.png';\n\nfunction SampleNextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'none' }}\n      onClick={onClick}\n    />\n  );\n}\n\nfunction SamplePrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'none' }}\n      onClick={onClick}\n    />\n  );\n}\n\nconst settings = {\n  dots: false,\n  fade: true,\n  infinite: true,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  initialSlide: 1,\n  adaptiveHeight: true,\n  nextArrow: <SampleNextArrow />,\n  prevArrow: <SamplePrevArrow />,\n  autoplay: true,\n  speed: 2000,\n  autoplaySpeed: 5500,\n  cssEase: 'linear',\n};\n\nexport const MoviesBanner = () => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n\n  // get Now Playing Movies\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const data = await getNowPlayingMovies(lng);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [lng, location.search]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <img src={Error} alt=\"default pic for error\" width=\"1200\" />}\n      {!error && movies.length > 0 && (\n        <Slider {...settings}>\n          {movies.map(\n            ({ id, poster_path, title, vote_average, overview }, idx) => (\n              <BackdropContainer key={id} className=\"styles.swiperslide\">\n                <GradientBlockTop></GradientBlockTop>\n                {`https://image.tmdb.org/t/p/original${poster_path}` && (\n                  <BackdropPoster>\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/original${poster_path}`\n                          : Error\n                      }\n                      alt={title}\n                      width=\"1200\"\n                    />\n                  </BackdropPoster>\n                )}\n                <GradientBlockBottom></GradientBlockBottom>\n                <ItemMovies>\n                  <Content>\n                    <Title title={title} />\n                    {(vote_average || vote_average > 0) && (\n                      <Rating\n                        name=\"read-only\"\n                        defaultValue={(vote_average / 10) * 5}\n                        precision={0.5}\n                        size=\"large\"\n                        readOnly\n                      />\n                    )}\n                    {overview?.length > 250 ? (\n                      <Reviews>{overview.slice(0, 250)}...</Reviews>\n                    ) : (\n                      <Reviews>{overview}</Reviews>\n                    )}\n\n                    <NavLink to={`/movies/${id}`} state={location.state}>\n                      WATCH MORE\n                    </NavLink>\n                  </Content>\n                </ItemMovies>\n              </BackdropContainer>\n            )\n          )}\n        </Slider>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n// CAROUSEL SWIPER IMPORT\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/autoplay';\nimport 'swiper/css/scrollbar';\nimport { Autoplay, Scrollbar } from 'swiper';\n\nimport Grid2 from '@mui/material/Unstable_Grid2';\n\nimport {\n  ActorName,\n  AvatarWrap,\n  BackdropActors,\n  BgBlockActors,\n  BlockInfoActors,\n  GradientBlockBottomActors,\n  GradientBlockTop,\n  Known,\n  MoviesBlock,\n  Poster,\n  SectionActors,\n  SectionHero,\n  SmallText,\n  TitleList,\n} from './MoviesPage.styled';\n\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport {\n  getActorsPopular,\n  getGenresMovies,\n  getMoviesByQuery,\n  getMoviesWithGenres,\n} from 'services/themoviedbAPI';\nimport { MovieGallery } from 'modules/MovieGallery/MovieGallery';\n\nimport { Loader } from 'components/Loader/Loader';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport NoPoster from 'assets/no-poster.jpg';\nimport ActorsBg from 'assets/actors-bg.png';\nimport { GenresSelect } from 'components/GenresSelect/GenresSelect';\nimport { Title } from 'components/Title/Title';\nimport Pagination from 'components/Pagination/Pagination';\nimport { MoviesBanner } from 'components/MoviesBanner/MoviesBanner';\n\nconst MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n\n  const [data, setData] = useState(null);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [genres, setGenres] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: 1,\n    query: '',\n  });\n\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const page = Number(params.page || 1);\n  let { query } = params;\n\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  // movies\n  useEffect(() => {\n    (async () => {\n      try {\n        setData(null);\n        const data = await getMoviesByQuery(page, query, lng);\n        //console.log(data.results);\n        setMovies(data.results);\n        setTotalPages(data.total_results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [page, query, location.search, lng]);\n\n  useEffect(() => {\n    const filtered = movies?.filter(movie =>\n      movie?.title?.toLowerCase().includes(query?.toLowerCase())\n    );\n    setFilteredMovies(filtered);\n  }, [movies, query]);\n\n  // actors\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const dataActors = await getActorsPopular(lng);\n        //console.log(data);\n        setActors(dataActors);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [lng]);\n\n  // get movies by genres\n  useEffect(() => {\n    if (!selectedGenre) return;\n\n    const fetchMovies = async (movieId, lng) => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setMovies([]);\n        const moviesData = await getMoviesWithGenres(movieId, lng);\n        setData(moviesData.results);\n      } catch (error) {\n        setData(null);\n        setError(<ImageErrorView message={t('moviesPage.mistake')} />);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies(selectedGenre, lng);\n  }, [lng, selectedGenre, t]);\n\n  // get genres\n  useEffect(() => {\n    async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const genresData = await getGenresMovies(lng);\n        setGenres(genresData);\n      } catch (error) {\n        setError(`{t('moviesPage.set_error')}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getGenres();\n  }, [lng]);\n\n  if (!actors) {\n    return <div>{t('loading')}</div>;\n  }\n\n  const handleSearchChange = e => {\n    const inputValue = e.target.value;\n    query = inputValue;\n    setSearchParams({ page: 1, query: query });\n\n    // clear selected genre when input is changed\n    if (selectedGenre) {\n      setSelectedGenre(null);\n    }\n  };\n\n  // console.log(movies);\n  return (\n    <>\n      <MoviesBlock>\n        <SectionHero>\n          <GradientBlockTop></GradientBlockTop>\n          <MoviesBanner />\n        </SectionHero>\n        {/* ПОШУК ФІЛЬМІВ */}\n        <Searchbar value={query} onChange={handleSearchChange} />\n        <GenresSelect\n          onSelect={setSelectedGenre}\n          genres={genres}\n          isLoading={isLoading}\n        />\n\n        {isLoading && <Loader />}\n        {/*  якщо запит відбувся з помилкою - рендериться дефолтне зображення з повідомленням помилки */}\n        {error && <ImageErrorView message={t('moviesPage.mistake')} />}\n\n        {/* якщо при запиті зображення не знайдені - рендериться дефолтне зображення з повідомленням */}\n        {totalPages === 0 && data === null && (\n          <ImageErrorView message={t('moviesPage.not_found')} />\n        )}\n\n        {!error && !isLoading && !query && selectedGenre === null && (\n          <>\n            <Title title={t('actorsPage.expected')} />\n            <MovieGallery movies={movies} genres={genres} />\n          </>\n        )}\n\n        {!error && query && !isLoading && (\n          <MovieGallery movies={filteredMovies} genres={genres} />\n        )}\n\n        {movies.length > 0 && !isLoading && page <= totalPages && (\n          <Pagination\n            pageCount={totalPages}\n            setSearchParams={setSearchParams}\n            params={params}\n            currentPage={page - 1}\n          />\n        )}\n\n        {/* рендер галереї зображень за жанрами*/}\n        {!error && !isLoading && data && (\n          <>\n            <Title title={t('moviesPage.trend_list')} />\n            <MovieGallery movies={data} genres={genres} />\n          </>\n        )}\n\n        {/* якщо запит успішний  - рендериться галерея зображень акторів*/}\n        {actors && (\n          <>\n            <BlockInfoActors>\n              <TitleList>{t('moviesPage.persons_list')}</TitleList>\n\n              <SmallText>\n                <small>{t('moviesPage.description_persons_list')}</small>\n              </SmallText>\n            </BlockInfoActors>\n\n            <SectionActors>\n              <BackdropActors>\n                <GradientBlockTop></GradientBlockTop>\n\n                <BgBlockActors>\n                  <img src={ActorsBg} alt=\"poster opacity\" width=\"1200\" />\n                </BgBlockActors>\n\n                <GradientBlockBottomActors></GradientBlockBottomActors>\n              </BackdropActors>\n            </SectionActors>\n            <Grid2\n              container\n              spacing={1}\n              rowSpacing={1}\n              component=\"section\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid2 container spacing={1}>\n                <Swiper\n                  centeredSlides={true}\n                  spaceBetween={30}\n                  scrollbar={{\n                    hide: true,\n                  }}\n                  modules={[Autoplay, Scrollbar]}\n                  className=\"mySwiper\"\n                  loop={true}\n                  autoplay={{\n                    delay: 2000,\n                    disableOnInteraction: false,\n                  }}\n                  breakpoints={{\n                    // when window width is >= 320px\n                    320: {\n                      slidesPerView: 2,\n                      spaceBetween: 0,\n                    },\n                    // when window width is >= 640px\n                    640: {\n                      slidesPerView: 6,\n                      spaceBetween: 20,\n                    },\n                    // when window width is >= 1040px\n                    1040: {\n                      slidesPerView: 8,\n                      spaceBetween: 50,\n                    },\n                  }}\n                >\n                  {actors.map(({ id, profile_path, name, known_for }) => {\n                    return (\n                      <SwiperSlide key={id}>\n                        <Link\n                          to={`/actors/${id}`}\n                          state={{ from: location }}\n                          key={id}\n                        >\n                          <AvatarWrap>\n                            <Poster\n                              src={\n                                profile_path\n                                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                                  : NoPoster\n                              }\n                              alt={name}\n                            />\n                          </AvatarWrap>\n\n                          <ActorName>{name}</ActorName>\n                          {known_for[0] && (\n                            <>\n                              <Known>{known_for[0].title}</Known>\n                            </>\n                          )}\n                        </Link>\n                      </SwiperSlide>\n                    );\n                  })}\n                </Swiper>\n              </Grid2>\n            </Grid2>\n          </>\n        )}\n      </MoviesBlock>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["SearchForm","styled","Icon","HiMagnifyingGlass","props","theme","colors","accent","white","SearchFormBtn","SearchFormInput","DebounceInput","space","fonts","heading","Searchbar","value","onChange","t","useTranslation","type","debounceTimeout","placeholder","size","propType","PropTypes","MoviesBlock","fontSizes","s","xl","AvatarWrap","radii","normal","m","shadows","textShadow","secondary","Poster","BgBlockActors","BackdropActors","GradientBlockTop","gradientBlock","SectionHero","SectionActors","BlockInfoActors","ActorName","cardsTextColor","xs","Known","TitleList","text","l","SmallText","GradientBlockBottomActors","gradientHeroBanner","animatedComponents","makeAnimated","GenresSelect","onSelect","genres","isLoading","customStyles","option","defaultStyles","state","fontSize","color","isSelected","background","control","border","boxShadow","singleValue","borderRadius","maxWidth","padding","marginLeft","options","map","genre","id","label","name","components","isClearable","styles","className","classNamePrefix","BackdropContainer","BackdropPoster","GradientBlockBottom","ItemMovies","body","Content","Reviews","NavLink","MovieLink","SampleNextArrow","style","onClick","display","SamplePrevArrow","settings","dots","fade","infinite","slidesToShow","slidesToScroll","initialSlide","adaptiveHeight","nextArrow","prevArrow","autoplay","speed","autoplaySpeed","cssEase","MoviesBanner","location","useLocation","useState","setIsLoading","error","setError","movies","setMovies","lng","i18n","language","useEffect","getNowPlayingMovies","data","results","console","log","message","search","Loader","src","Error","alt","width","length","idx","poster_path","title","vote_average","overview","Title","Rating","defaultValue","precision","readOnly","slice","to","filteredMovies","setFilteredMovies","actors","setActors","totalPages","setTotalPages","setData","selectedGenre","setSelectedGenre","setGenres","useSearchParams","page","query","searchParams","setSearchParams","params","useMemo","Object","fromEntries","Number","getMoviesByQuery","total_results","filtered","filter","movie","toLowerCase","includes","getActorsPopular","dataActors","fetchMovies","movieId","getMoviesWithGenres","moviesData","ImageErrorView","getGenresMovies","genresData","getGenres","e","inputValue","target","MovieGallery","Pagination","pageCount","currentPage","ActorsBg","Grid2","container","spacing","rowSpacing","component","justifyContent","alignItems","centeredSlides","spaceBetween","scrollbar","hide","modules","Autoplay","Scrollbar","loop","delay","disableOnInteraction","breakpoints","slidesPerView","profile_path","known_for","from","NoPoster"],"sourceRoot":""}
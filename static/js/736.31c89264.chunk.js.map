{"version":3,"file":"static/js/736.31c89264.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  text-align: center;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  max-width: 100%;\n  width: 120px;\n  height: 100%;\n\n  border-radius: 8px;\n  border: none;\n  outline: none;\n\n  box-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n  -webkit-box-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n  -moz-box-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n\n  font-size: 12px;\n  font-weight: 700;\n  overflow: hidden;\n`;\n\nexport const CastPhotoThumb = styled.div`\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 10px;\n`;\n\nexport const CastPhoto = styled.img`\n  display: block;\n  min-height: 100%;\n  height: 160px;\n  width: 100%;\n\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  transition: transform 250ms linear;\n  transform: scale(1);\n\n  object-fit: cover;\n  object-position: center;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Wrap = styled.div`\n  flex-direction: column;\n  align-items: center;\n  flex: 1 0 auto;\n  padding: 4px;\n`;\n\nexport const MovieHero = styled.span`\n  color: ${props => props.theme.colors.accent};\n`;\n","import ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from 'components/Title/Title';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMoviesCast } from 'services/themoviedbAPI';\nimport {\n  CastItem,\n  CastList,\n  CastPhoto,\n  CastPhotoThumb,\n  MovieHero,\n  Wrap,\n} from './Cast.styled';\nimport Avatar from 'assets/avatar.png';\nimport { useTranslation } from 'react-i18next';\n\nconst Cast = ({ lng }) => {\n  //console.log('Cast:', lng);\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const data = await getMoviesCast(movieId, lng);\n        setCastList(data);\n      } catch (error) {\n        setError(`{t('moviesPage.set_error')}`);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId, lng]);\n\n  if (!castList) {\n    return <div>{t('loading')}</div>;\n  }\n\n  return (\n    <>\n      <Title title={t('moviesPage.cast')} />\n      {isLoading && <Loader />}\n      {error && <ImageErrorView message={t('moviesPage.mistake')} />}\n      {error && !isLoading && (\n        <span style={{ color: 'red' }}>{t('moviesPage.cast_desription')}</span>\n      )}\n      {castList.length > 0 ? (\n        <CastList>\n          {castList.map(actor => (\n            <CastItem key={actor.id}>\n              <CastPhotoThumb>\n                <CastPhoto\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n                      : Avatar\n                  }\n                  alt={actor.name}\n                  width=\"120\"\n                />\n              </CastPhotoThumb>\n\n              <Wrap>\n                <p>{actor.name}</p>\n                <p>\n                  {t('moviesPage.character')}\n                  <MovieHero>{actor.character}</MovieHero>\n                </p>\n              </Wrap>\n            </CastItem>\n          ))}\n        </CastList>\n      ) : (\n        <div style={{ padding: '26px', textAlign: 'center' }}>\n          {t('moviesPage.cast_desription')}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  lng: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n  margin: 1vh auto;\n`;\n\nexport const Text = styled.p`\n  max-width: 80%;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  text-align: center;\n  \n  font-family: ${props => props.theme.fonts.heading}\n  font-size: ${props => props.theme.fontSizes.s}\n`;\n\nexport const Hero = styled.img`\n  width: 50vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n  margin: 0 auto;\n`;\n\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n  flex: 1 0 auto;\n\n  img {\n    opacity: 0.8;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 45vw;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const BlockHero = styled.div`\n  position: relative;\n  margin-top: -30px;\n  margin-bottom: 30px;\n`;\nexport const HeroContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import HeroImg from 'assets/error.png';\nimport {\n  BlockHero,\n  GradientBlockBottom,\n  GradientBlockTop,\n  Hero,\n  HeroContainer,\n  Text,\n  Wrapper,\n} from './ImageErrorView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return (\n    <Wrapper role=\"alert\">\n      <Text>{message}</Text>\n      <BlockHero>\n        <HeroContainer>\n          <GradientBlockTop></GradientBlockTop>\n          <Hero src={HeroImg} alt=\"Actor\" width=\"240\" />\n          <GradientBlockBottom></GradientBlockBottom>\n        </HeroContainer>\n      </BlockHero>\n    </Wrapper>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 1px 1px #fff, 1px 1px 1px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  // language: 'en' / 'uk',\n};\n\nexport const getPopularMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getTopRatedMovies = async lng => {\n  try {\n    const { data } = await axios.get(`/movie/top_rated`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n        include_adult: false,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesCast = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\nexport const getVideosMovies = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie`s videos');\n  }\n};\n\nexport const getGenresMovies = async lng => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesWithGenres = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(\n      `/discover/movie?with_genres=${movieId}&sort_by=popularity.desc&include_adult=false&page=1&language=${lng}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getGenresMovies = async controller => {\n//   try {\n//     const { data } = await axios.get(`genre/movie/list`, {\n//       signal: controller.signal,\n//     });\n//     return data.genres;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n\nexport const getActorsPopular = async lng => {\n  try {\n    const { data } = await axios.get(`person/popular`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n// export const getLanguages = async () => {\n//   try {\n//     const { data } = await axios.get(`/configuration/primary_translations`);\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n"],"names":["CastList","styled","CastItem","CastPhotoThumb","CastPhoto","Wrap","MovieHero","props","theme","colors","accent","lng","movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","error","setError","t","useTranslation","useEffect","getMoviesCast","data","Title","title","Loader","ImageErrorView","message","style","color","length","map","actor","src","profile_path","Avatar","alt","name","width","character","id","padding","textAlign","Wrapper","Text","shadows","textShadow","fonts","heading","fontSizes","s","Hero","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","BlockHero","HeroContainer","role","HeroImg","MainTitle","space","m","l","axios","api_key","getPopularMovies","page","params","language","Error","getTopRatedMovies","getMoviesByQuery","query","include_adult","getMoviesDetailsById","cast","getMoviesReviews","results","getVideosMovies","getGenresMovies","genres","getMoviesWithGenres","getActorsPopular"],"sourceRoot":""}
{"version":3,"file":"static/js/860.a330cd6e.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/MoviesPage/MoviesPage.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/GenresSelect/GenresSelect.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 20px;\n  place-content: center;\n\n  max-width: calc(100vw - 48px);\n\n  margin: 1vh auto;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n`;\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  margin: 0 auto;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: ${({ theme }) => theme.space[3]}px;\n\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  background-color: transparent;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    min-height: 100%;\n    height: 420px;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-top: ${({ theme }) => theme.space[3]}px;\n  padding-bottom: ${({ theme }) => theme.space[3]}px;\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.m};\n  font-weight: 700;\n`;\n\nexport const ReleaseDate = styled.p`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n\n  background-color: rgba(185, 228, 201, 0.773);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  color: rgba(255, 0, 0, 1);\n  text-shadow: 0 0.4px 0.4px #000;\n\n  border-radius: 8px;\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\n\nexport const CircleRating = styled.div`\n  position: absolute;\n  bottom: 44px;\n  right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 42px;\n  height: 42px;\n\n  text-shadow: 0 0.3px 0.3px #000;\n  border-radius: 50%;\n  padding: 2px;\n`;\nexport const Stars = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding-left: ${({ theme }) => theme.space[1]}px;\n  padding-right: ${({ theme }) => theme.space[1]}px;\n  padding-top: ${({ theme }) => theme.space[0]}px;\n  padding-bottom: ${({ theme }) => theme.space[0]}px;\n  width: 50%;\n  height: 22px;\n  border-radius: 8px;\n  background-color: transparent;\n  backdrop-filter: blur(7.5px);\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  bottom: 48px;\n  left: 10px;\n`;\n","import React from 'react';\nimport {\n  CircleRating,\n  GenresBlock,\n  MovieListItem,\n  MoviePoster,\n  MovieTitle,\n  ReleaseDate,\n  Stars,\n} from './MovieGalleryItem.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Rating } from '@mui/material';\n\nimport { RatingProgressbar } from 'components/RatingProgressbar/RatingProgressbar';\nimport NoPoster from 'assets/no-poster.jpg';\nimport { Genres } from 'components/Genres/Genres';\n\nexport const MovieGalleryItem = ({\n  movie: {\n    id,\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    genre_ids,\n  },\n  state,\n  lng,\n}) => {\n  //console.log('MovieGalleryItem:', lng);\n  return (\n    <MovieListItem>\n      <Link to={`/movies/${id}`} state={state}>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width=\"200\"\n          />\n        </MoviePoster>\n        <MovieTitle>{title}</MovieTitle>\n        {release_date && <ReleaseDate>{parseInt(release_date)}</ReleaseDate>}\n        {vote_average !== 0 && (\n          <Stars>\n            <Rating\n              style={{\n                position: 'absolute',\n                top: '0',\n                right: '0',\n              }}\n              name=\"read-only\"\n              defaultValue={(vote_average / 10) * 5}\n              precision={0.5}\n              size=\"small\"\n              readOnly\n            />\n          </Stars>\n        )}\n        {vote_average !== 0 && (\n          <CircleRating>\n            <RatingProgressbar rating={vote_average.toFixed(1)} />\n          </CircleRating>\n        )}\n      </Link>\n      <GenresBlock>\n        <Genres lng={lng} data={genre_ids?.slice(0, 1)} />\n      </GenresBlock>\n    </MovieListItem>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n  state: PropTypes.objectOf(PropTypes.object).isRequired,\n  lng: PropTypes.string.isRequired,\n};\n","import { MovieListStyled } from './MovieGallery.styled';\nimport { MovieGalleryItem } from 'components/MovieGalleryItem/MovieGalleryItem';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieGallery = ({ movies, lng }) => {\n  // console.log('MovieGallery:', lng);\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(movie => (\n        <MovieGalleryItem\n          key={movie.id}\n          movie={movie}\n          state={{ from: location }}\n          lng={lng}\n        />\n      ))}\n    </MovieListStyled>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  lng: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const Paginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n  margin: 30px 0;\n  font-size: 14px;\n\n  .selected {\n    border: 1px solid #ffffff;\n    border-radius: 8px;\n    background: #ecf0f3;\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n    text-shadow: 0.0625rem 0.0625rem 0.0625rem #fff;\n    color: ${props => props.theme.colors.accent};\n  }\n\n  a {\n    display: inline-block;\n    padding: 3px 0 2px 0;\n    vertical-align: middle;\n    width: 38px;\n    height: 32px;\n    text-align: center;\n\n    border-radius: 8px;\n    border: none;\n    outline: none;\n\n    box-shadow: ${({ theme }) => theme.buttonShadow};\n\n    text-shadow: 0 1px 1px #fff;\n    background-color: transparent;\n\n    cursor: pointer;\n\n    &:hover {\n      background: #ecf0f3;\n      box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n      color: ${props => props.theme.colors.accent};\n    }\n  }\n`;\n","import { Paginate } from './Pagination.styled';\nimport PropTypes from 'prop-types';\n//import ReactPaginate from 'react-paginate';\n\nconst Pagination = ({ pageCount, setSearchParams, params, currentPage }) => {\n  //console.log(pages);\n  const handlePageClick = e => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <Paginate\n      initialPage={currentPage}\n      nextLabel=\"»\"\n      onPageChange={handlePageClick}\n      pageCount={pageCount}\n      breakLabel=\"...\"\n      previousLabel=\"«\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={1}\n      renderOnZeroPageCount={null}\n      onPageActive={window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      })}\n    />\n  );\n};\n\nexport default Pagination;\n\nPagination.propTypes = {\n  pageCount: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 1px 1px #fff, 1px 1px 1px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MoviesBlock = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding-top: ${({ theme }) => theme.space[5]}px;\n  padding-bottom: ${({ theme }) => theme.space[5]}px;\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  padding-right: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n\n  border: none;\n  border-radius: ${props => props.theme.radii.normal};\n\n  font-size: ${props => props.theme.fontSizes.m};\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  background-color: ${props => props.theme.colors.secondary};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(0.8);\n  }\n`;\n\nexport const AvatarWrap = styled.div`\n  display: inline-block;\n  margin-bottom: 15px;\n\n  width: 125px;\n  height: 125px;\n  border-radius: 50%;\n\n  overflow: hidden;\n`;\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center top;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\n//--------------------------------------------------\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n    opacity: 0.5;\n  }\n`;\nexport const BgBlockActors = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    opacity: 0.5;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const BackdropActors = styled.div`\n  padding-top: 84px;\n  padding-bottom: 84px;\n  width: 100%;\n  height: 100px;\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 450px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const SectionHero = styled.section`\n  position: relative;\n\n  margin-top: -50px;\n  margin-bottom: 30px;\n\n  padding-top: 84px;\n  padding-bottom: 84px;\n\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nexport const SectionActors = styled.section`\n  position: relative;\n\n  margin-bottom: -180px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const BlockInfoActors = styled.div`\n  position: relative;\n  z-index: 50;\n  margin-bottom: -110px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const HeroContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin: 0 auto;\n  padding: 0;\n\n  width: 100%;\n  height: 450px;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ActorName = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\nexport const Known = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n  opacity: 0.5;\n`;\n\nexport const TitleList = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n\n  width: 100%;\n  height: 4rem;\n\n  backdrop-filter: blur(0.7125rem);\n\n  text-align: center;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 1px 1px #fff, 1px 1px 1px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n\nexport const SmallText = styled.p`\n  position: relative;\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.s};\n  font-style: italic;\n  opacity: 0.5;\n`;\n","// import styled from 'styled-components';\n// import { HiMagnifyingGlass } from 'react-icons/hi2';\n\n// export const SearchForm = styled.form`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   margin: 0 auto;\n//   margin-top: -70px;\n\n//   width: 100%;\n\n//   max-width: 20.4rem;\n//   height: 2.2rem;\n\n//   backdrop-filter: blur(2px);\n//   color: #fff;\n//   outline: 0;\n//   border: 0;\n//   border-radius: 30px;\n\n//   box-shadow: 1px 1px 1px #f3d8a0, 1px 1px 1px #fff;\n\n//   overflow: hidden;\n// `;\n\n// export const Icon = styled(HiMagnifyingGlass)`\n//   position: absolute;\n//   right: -5px;\n//   margin-right: 10px;\n//   width: 20px;\n//   height: 20px;\n\n//   fill: ${props => props.theme.colors.accent};\n//   stroke: ${props => props.theme.colors.white};\n//   stroke-width: 1px;\n//   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//   :hover {\n//     transform: scale(1.2);\n//   }\n// `;\n\n// export const SearchFormBtn = styled.button`\n//   display: inline-flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 34px;\n//   height: 34px;\n//   border: 0;\n//   border-radius: 30px 0 0 30px;\n\n//   opacity: 0.6;\n//   background-color: rgba(185, 228, 201, 1);\n//   transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   cursor: pointer;\n//   outline: none;\n\n//   :hover {\n//     opacity: 1;\n//   }\n\n//   svg {\n//     fill: ${props => props.theme.colors.accent};\n//     stroke: ${props => props.theme.colors.white};\n//     stroke-width: 1px;\n//     transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//     :hover {\n//       transform: scale(1.2);\n//     }\n//   }\n// `;\n\n// export const SearchFormInput = styled.input`\n//   display: inline-block;\n//   width: 100%;\n//   min-height: 34px;\n\n//   border-radius: 0.1rem;\n\n//   font: inherit;\n\n//   font-size: 1.2rem;\n\n//   border: none;\n//   outline: none;\n\n//   padding-left: ${props => props.theme.space[5]}px;\n//   padding-right: ${props => props.theme.space[3]}px;\n\n//   background: none;\n\n//   color: ${props => props.theme.colors.accent};\n//   text-shadow: 0 0.4px 0.4px #fff;\n//   letter-spacing: 1.4px;\n\n//   ::placeholder {\n//     text-align: center;\n//     color: #37966f;\n//     font-size: 20px;\n//     font-family: ${props => props.theme.fonts.heading};\n//     text-shadow: 0 0.4px 0.4px #000;\n//     letter-spacing: 1.3px;\n//   }\n// `;\n\nimport styled from 'styled-components';\nimport DebounceInput from 'react-debounce-input';\nimport { HiMagnifyingGlass } from 'react-icons/hi2';\n\nexport const SearchForm = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 30px;\n\n  width: 100%;\n\n  max-width: 20.4rem;\n  height: 2.2rem;\n\n  backdrop-filter: blur(2px);\n  color: #fff;\n  outline: 0;\n  border: 0;\n  border-radius: 30px;\n\n  box-shadow: 1px 1px 1px #f3d8a0, 1px 1px 1px #fff;\n\n  overflow: hidden;\n`;\n\nexport const Icon = styled(HiMagnifyingGlass)`\n  position: absolute;\n  right: -5px;\n  margin-right: 10px;\n  width: 20px;\n  height: 20px;\n\n  fill: ${props => props.theme.colors.accent};\n  stroke: ${props => props.theme.colors.white};\n  stroke-width: 1px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 34px;\n  height: 34px;\n  border: 0;\n  border-radius: 30px 0 0 30px;\n\n  opacity: 0.6;\n  background-color: rgba(185, 228, 201, 1);\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    fill: ${props => props.theme.colors.accent};\n    stroke: ${props => props.theme.colors.white};\n    stroke-width: 1px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n      transform: scale(1.2);\n    }\n  }\n`;\n\nexport const SearchFormInput = styled(DebounceInput)`\n  display: inline-block;\n  width: 100%;\n  min-height: 34px;\n\n  border-radius: 0.1rem;\n\n  font: inherit;\n\n  font-size: 1.2rem;\n\n  border: none;\n  outline: none;\n\n  padding-left: ${props => props.theme.space[5]}px;\n  padding-right: ${props => props.theme.space[3]}px;\n\n  background: none;\n\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 0.4px 0.4px #fff;\n  letter-spacing: 1.4px;\n\n  :focus {\n    outline: none;\n  }\n\n  ::placeholder {\n    text-align: center;\n    color: #37966f;\n    font-size: 20px;\n    font-family: ${props => props.theme.fonts.heading};\n    text-shadow: 0 0.4px 0.4px #000;\n    letter-spacing: 1.3px;\n  }\n`;\n","//import React, { useState } from 'react';\n// import {\n//   Icon,\n//   SearchForm,\n//   SearchFormBtn,\n//   SearchFormInput,\n// } from './Searchbar.styled';\n// import { toast } from 'react-toastify';\n// import { notifyOptions } from 'utils/notify';\n// import PropTypes from 'prop-types';\n\n// export const Searchbar = ({ onSubmit, t }) => {\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const { query } = e.target.elements;\n//     if (query.value.trim() === '') {\n//       return toast.info('Please enter key words for search', notifyOptions);\n//     }\n//     onSubmit(query.value);\n//     e.target.reset();\n//   };\n\n//   return (\n//     <SearchForm onSubmit={handleSubmit}>\n//       <SearchFormInput\n//         type=\"text\"\n//         autoFocus\n//         placeholder={t('moviesPage.placeholder_search')}\n//         name=\"query\"\n//       />\n//       <SearchFormBtn type=\"submit\">\n//         <Icon size=\"24\" />\n//       </SearchFormBtn>\n//     </SearchForm>\n//   );\n// };\n\n// Searchbar.propType = {\n//   onSubmit: PropTypes.func.isRequired,\n//   t: PropTypes.any.isRequired,\n// };\n\nimport {\n  Icon,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ value, onChange, t }) => {\n  return (\n    <SearchForm>\n      <SearchFormInput\n        type=\"text\"\n        value={value}\n        debounceTimeout={500}\n        onChange={onChange}\n        autoFocus\n        placeholder={t('moviesPage.placeholder_search')}\n      />\n      <SearchFormBtn type=\"submit\">\n        <Icon size=\"24\" />\n      </SearchFormBtn>\n    </SearchForm>\n  );\n};\n\nSearchbar.propType = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  t: PropTypes.any.isRequired,\n};\n","import ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { getGenresMovies } from 'services/themoviedbAPI';\n\nconst animatedComponents = makeAnimated();\n\nexport const GenresSelect = ({ onSelect, t, lng }) => {\n  //console.log('GenresSelect:', lng);\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const customStyles = {\n    option: (defaultStyles, state) => ({\n      ...defaultStyles,\n      fontSize: '14px',\n      color: state.isSelected ? '#212529' : '#fd5523',\n      backgroundColor: state.isSelected\n        ? 'rgba(185, 228, 201, 0.773)'\n        : '#FFFBE6',\n    }),\n\n    control: defaultStyles => ({\n      ...defaultStyles,\n      backgroundColor: 'rgba(185, 228, 201, 0.773)',\n      border: 'none',\n      boxShadow: 'none',\n    }),\n    singleValue: defaultStyles => ({\n      ...defaultStyles,\n      color: '#FFF',\n      backgroundColor: '#fd5523',\n      borderRadius: '30px',\n      maxWidth: '45%',\n      padding: '5px 10px',\n      marginLeft: '30px',\n    }),\n  };\n\n  // genres\n  useEffect(() => {\n    // const abortController = new AbortController();\n    async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // const genresData = await getGenresMovies(abortController);\n        // setError(null);\n        const genresData = await getGenresMovies(lng);\n        //console.log(genresData);\n        setGenres(genresData);\n      } catch (error) {\n        setError(`{t('moviesPage.set_error')}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getGenres();\n    // return () => abortController.abort();\n  }, [lng]);\n\n  const options = genres?.map(genre => ({\n    value: genre.id,\n    label: genre.name,\n  }));\n\n  return (\n    <>\n      <Select\n        options={options}\n        isLoading={isLoading}\n        onChange={option => (!option ? '' : onSelect(option.value))}\n        placeholder={t('moviesPage.placeholder_genres')}\n        components={animatedComponents}\n        isClearable={true}\n        styles={customStyles}\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n      />\n      {error && !isLoading && (\n        <ImageErrorView message={t('moviesPage.mistake')} />\n      )}\n    </>\n  );\n};\n\nGenresSelect.propTypes = {\n  lng: PropTypes.string.isRequired,\n  t: PropTypes.any.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// CAROUSEL SWIPER IMPORT\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/autoplay';\nimport 'swiper/css/scrollbar';\nimport { Autoplay, Scrollbar } from 'swiper';\n\nimport Grid2 from '@mui/material/Unstable_Grid2';\n\nimport {\n  ActorName,\n  AvatarWrap,\n  BackdropActors,\n  BackdropImg,\n  BgBlockActors,\n  BlockInfoActors,\n  GradientBlockBottom,\n  GradientBlockTop,\n  HeroContainer,\n  Known,\n  MoviesBlock,\n  Poster,\n  SectionActors,\n  SectionHero,\n  SmallText,\n  TitleList,\n} from './MoviesPage.styled';\n\n//import { InitialStateGallery } from 'components/InitialStateGallery/InitialStateGallery';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport {\n  getActorsPopular,\n  getMoviesByQuery,\n  getMoviesWithGenres,\n} from 'services/themoviedbAPI';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\n\nimport { Loader } from 'components/Loader/Loader';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport NoPoster from 'assets/no-poster.jpg';\nimport HeroPoster from 'assets/hero-poster.jpeg';\nimport ActorsBg from 'assets/actors-bg.png';\nimport { GenresSelect } from 'components/GenresSelect/GenresSelect';\nimport { Title } from 'components/Title/Title';\nimport { useTranslation } from 'react-i18next';\nimport Pagination from 'components/Pagination/Pagination';\n\nconst MoviesPage = props => {\n  const { lng } = props;\n  //console.log('Movies:', lng);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n\n  const [data, setData] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: 1,\n    query: '',\n  });\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const page = Number(params.page || 1);\n  let { query } = params;\n  //console.log(params);\n\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  // movies\n  useEffect(() => {\n    (async () => {\n      try {\n        setData(null);\n        const data = await getMoviesByQuery(page, query, lng);\n        //console.log(data.results);\n\n        setMovies(data.results);\n        setTotalPages(data.total_results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n    // return () => {\n    //   controller.abort();\n    // };\n  }, [page, query, location.search, lng]);\n\n  useEffect(() => {\n    const filtered = movies?.filter(movie =>\n      movie?.title?.toLowerCase().includes(query?.toLowerCase())\n    );\n    setFilteredMovies(filtered);\n  }, [movies, query]);\n\n  // actors\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const dataActors = await getActorsPopular(lng);\n        //console.log(data);\n        setActors(dataActors);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [lng]);\n\n  if (!actors) {\n    return <div>{t('loading')}</div>;\n  }\n\n  const handleSearchChange = e => {\n    query = e.target.value;\n    setSearchParams({ page: 1, query: query });\n    //console.log(params);\n  };\n\n  // get movies by genres\n  const fetchMovies = async (movieId, lng) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      setMovies([]);\n      const moviesData = await getMoviesWithGenres(movieId, lng);\n      setData(moviesData.results);\n    } catch (error) {\n      setData(null);\n      setError(<ImageErrorView message={t('moviesPage.mistake')} />);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // console.log(movies);\n  // console.log(data);\n  return (\n    <>\n      {/* <HeroBanner movies={movies} /> */}\n      <MoviesBlock>\n        <SectionHero>\n          <HeroContainer>\n            <GradientBlockTop></GradientBlockTop>\n\n            <BackdropImg>\n              <img src={HeroPoster} alt=\"poster opacity\" width=\"1200\" />\n            </BackdropImg>\n\n            <GradientBlockBottom></GradientBlockBottom>\n          </HeroContainer>\n        </SectionHero>\n        {/* ПОШУК ФІЛЬМІВ */}\n        <Searchbar value={query} onChange={handleSearchChange} t={t} />\n        <GenresSelect onSelect={fetchMovies} t={t} lng={lng} />\n\n        {isLoading && <Loader />}\n        {/*  якщо запит відбувся з помилкою - рендериться дефолтне зображення з повідомленням помилки */}\n        {error && <ImageErrorView message={t('moviesPage.mistake')} />}\n\n        {/* якщо при запиті зображення не знайдені - рендериться дефолтне зображення з повідомленням */}\n        {totalPages === 0 && data === null && (\n          <ImageErrorView message={t('moviesPage.not_found')} />\n        )}\n\n        {!error && !isLoading && !query && (\n          <>\n            <Title title=\"Expected Movies\" />\n            <MovieGallery movies={movies} lng={lng} />\n          </>\n        )}\n\n        {!error && query && <MovieGallery movies={filteredMovies} lng={lng} />}\n        {movies.length > 0 && !isLoading && page <= totalPages && (\n          <Pagination\n            pageCount={totalPages}\n            setSearchParams={setSearchParams}\n            params={params}\n            currentPage={page - 1}\n          />\n        )}\n\n        {/* рендер галереї зображень за жанрами*/}\n        {!error && data && (\n          <>\n            <Title title={t('moviesPage.trend_list')} />\n            <MovieGallery movies={data} lng={lng} />\n          </>\n        )}\n\n        {/* якщо запит успішний  - рендериться галерея зображень акторів*/}\n        {actors && (\n          <>\n            <BlockInfoActors>\n              <TitleList>{t('moviesPage.persons_list')}</TitleList>\n\n              <SmallText>\n                <small>{t('moviesPage.description_persons_list')}</small>\n              </SmallText>\n            </BlockInfoActors>\n\n            <SectionActors>\n              <BackdropActors>\n                <GradientBlockTop></GradientBlockTop>\n\n                <BgBlockActors>\n                  <img src={ActorsBg} alt=\"poster opacity\" width=\"1200\" />\n                </BgBlockActors>\n\n                <GradientBlockBottom></GradientBlockBottom>\n              </BackdropActors>\n            </SectionActors>\n            <Grid2\n              container\n              spacing={1}\n              rowSpacing={1}\n              component=\"section\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid2 container spacing={1}>\n                <Swiper\n                  centeredSlides={true}\n                  spaceBetween={30}\n                  scrollbar={{\n                    hide: true,\n                  }}\n                  modules={[Autoplay, Scrollbar]}\n                  className=\"mySwiper\"\n                  loop={true}\n                  autoplay={{\n                    delay: 2000,\n                    disableOnInteraction: false,\n                  }}\n                  breakpoints={{\n                    // when window width is >= 320px\n                    320: {\n                      slidesPerView: 2,\n                      spaceBetween: 0,\n                    },\n                    // when window width is >= 640px\n                    640: {\n                      slidesPerView: 6,\n                      spaceBetween: 20,\n                    },\n                    // when window width is >= 1040px\n                    1040: {\n                      slidesPerView: 8,\n                      spaceBetween: 50,\n                    },\n                  }}\n                >\n                  {actors.map(({ id, profile_path, name, known_for }) => {\n                    return (\n                      <SwiperSlide key={id}>\n                        <Link\n                          to={`/actors/${id}`}\n                          state={{ from: location }}\n                          key={id}\n                        >\n                          <AvatarWrap>\n                            <Poster\n                              src={\n                                profile_path\n                                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                                  : `https://image.tmdb.org/t/p/w300${NoPoster}`\n                              }\n                              alt={name}\n                            />\n                          </AvatarWrap>\n\n                          <ActorName>{name}</ActorName>\n                          {known_for[0] && (\n                            <>\n                              <Known>{known_for[0].title}</Known>\n                            </>\n                          )}\n                        </Link>\n                      </SwiperSlide>\n                    );\n                  })}\n                </Swiper>\n              </Grid2>\n            </Grid2>\n          </>\n        )}\n      </MoviesBlock>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["MovieListStyled","styled","props","theme","space","MovieListItem","MoviePoster","MovieTitle","cardsTextColor","textShadow","fontSizes","m","ReleaseDate","xs","CircleRating","Stars","GenresBlock","MovieGalleryItem","movie","id","poster_path","title","original_title","release_date","vote_average","genre_ids","state","lng","to","src","NoPoster","alt","width","parseInt","Rating","style","position","top","right","name","defaultValue","precision","size","readOnly","RatingProgressbar","rating","toFixed","Genres","data","slice","MovieGallery","movies","location","useLocation","map","from","Paginate","ReactPaginate","colors","accent","buttonShadow","pageCount","setSearchParams","params","currentPage","initialPage","nextLabel","onPageChange","e","page","selected","breakLabel","previousLabel","pageRangeDisplayed","marginPagesDisplayed","renderOnZeroPageCount","onPageActive","window","scrollTo","behavior","MainTitle","fonts","heading","l","Title","MoviesBlock","s","xl","AvatarWrap","radii","normal","shadows","secondary","Poster","BackdropImg","BgBlockActors","BackdropActors","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","SectionHero","SectionActors","BlockInfoActors","HeroContainer","ActorName","Known","TitleList","SmallText","SearchForm","Icon","HiMagnifyingGlass","white","SearchFormBtn","SearchFormInput","DebounceInput","Searchbar","value","onChange","t","type","debounceTimeout","autoFocus","placeholder","propType","PropTypes","animatedComponents","makeAnimated","GenresSelect","onSelect","useState","genres","setGenres","isLoading","setIsLoading","error","setError","customStyles","option","defaultStyles","fontSize","color","isSelected","backgroundColor","control","border","boxShadow","singleValue","borderRadius","maxWidth","padding","marginLeft","useEffect","getGenresMovies","genresData","getGenres","options","genre","label","components","isClearable","styles","className","classNamePrefix","ImageErrorView","message","setMovies","filteredMovies","setFilteredMovies","actors","setActors","totalPages","setTotalPages","setData","useSearchParams","query","searchParams","useMemo","Object","fromEntries","Number","useTranslation","getMoviesByQuery","results","total_results","search","filtered","filter","toLowerCase","includes","getActorsPopular","dataActors","fetchMovies","movieId","getMoviesWithGenres","moviesData","HeroPoster","target","Loader","length","Pagination","ActorsBg","Grid2","container","spacing","rowSpacing","component","display","justifyContent","alignItems","centeredSlides","spaceBetween","scrollbar","hide","modules","Autoplay","Scrollbar","loop","autoplay","delay","disableOnInteraction","breakpoints","slidesPerView","profile_path","known_for"],"sourceRoot":""}
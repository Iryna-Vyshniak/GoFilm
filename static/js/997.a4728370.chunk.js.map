{"version":3,"file":"static/js/997.a4728370.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","modules/MovieGallery/MovieGallery.styled.jsx","modules/MovieGalleryItem/MovieGalleryItem.styled.jsx","modules/MovieGalleryItem/MovieGalleryItem.jsx","modules/MovieGallery/MovieGallery.jsx","pages/HomePage/HomePage.styled.jsx","components/CardFilm/CardFilm.styled.jsx","components/CardFilm/CardFilm.jsx","components/HeroBanner/HeroBanner.styled.jsx","components/HeroBanner/HeroBanner.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const Paginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin: 30px 0;\n  font-size: 14px;\n\n  .selected {\n    border: 1px solid #ffffff;\n    border-radius: 50%;\n    background: #ecf0f3;\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n    text-shadow: 0.0625rem 0.0625rem 0.0625rem #fff;\n    color: ${props => props.theme.colors.accent};\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding: 2px;\n\n    width: 34px;\n    height: 34px;\n    border-radius: 50%;\n    text-align: center;\n\n    border: none;\n    outline: none;\n\n    box-shadow: ${({ theme }) => theme.buttonShadow};\n\n    text-shadow: 0 1px 1px #fff;\n    background-color: transparent;\n\n    cursor: pointer;\n\n    &:hover {\n      background: #ecf0f3;\n      box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n      color: ${props => props.theme.colors.accent};\n    }\n  }\n`;\n","import { Paginate } from './Pagination.styled';\nimport PropTypes from 'prop-types';\n//import ReactPaginate from 'react-paginate';\n\nconst Pagination = ({ pageCount, setSearchParams, params, currentPage }) => {\n  //console.log(pages);\n  const handlePageClick = e => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <Paginate\n      initialPage={currentPage}\n      nextLabel=\"»\"\n      onPageChange={handlePageClick}\n      pageCount={pageCount}\n      breakLabel=\"...\"\n      previousLabel=\"«\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={1}\n      renderOnZeroPageCount={null}\n      onPageActive={window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      })}\n    />\n  );\n};\n\nexport default Pagination;\n\nPagination.propTypes = {\n  pageCount: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  color: ${({ theme }) => theme.text};\n  text-shadow: 0 0.4px 0.4px #fff, 0 0.5px 0.5px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  text-align: center;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 20px;\n  place-content: center;\n\n  max-width: calc(100vw - 48px);\n\n  margin: 1vh auto;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n`;\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  margin: 0 auto;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: ${({ theme }) => theme.space[3]}px;\n\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  background-color: transparent;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    min-height: 100%;\n    height: 420px;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-top: ${({ theme }) => theme.space[3]}px;\n  padding-bottom: ${({ theme }) => theme.space[3]}px;\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.s};\n  font-weight: 700;\n`;\n\nexport const ReleaseDate = styled.p`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n\n  background-color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  color: rgba(255, 66, 8, 1);\n  text-shadow: 0 0.4px 0.4px #000;\n\n  border-radius: 8px;\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\n\nexport const CircleRating = styled.div`\n  position: absolute;\n  bottom: 38px;\n  right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 42px;\n  height: 42px;\n\n  text-shadow: 0 0.3px 0.3px #000;\n  border-radius: 50%;\n  padding: 2px;\n`;\nexport const Stars = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding-left: ${({ theme }) => theme.space[1]}px;\n  padding-right: ${({ theme }) => theme.space[1]}px;\n  padding-top: ${({ theme }) => theme.space[0]}px;\n  padding-bottom: ${({ theme }) => theme.space[0]}px;\n  width: 50%;\n  height: 22px;\n  border-radius: 8px;\n  background-color: transparent;\n  backdrop-filter: blur(7.5px);\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  bottom: 48px;\n  left: 10px;\n`;\n","import React from 'react';\nimport {\n  CircleRating,\n  GenresBlock,\n  MovieListItem,\n  MoviePoster,\n  MovieTitle,\n  ReleaseDate,\n  Stars,\n} from './MovieGalleryItem.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Rating } from '@mui/material';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport { RatingProgressbar } from 'components/RatingProgressbar/RatingProgressbar';\nimport NoPoster from 'assets/no-poster.jpg';\nimport { Genres } from 'components/Genres/Genres';\n\nexport const MovieGalleryItem = ({\n  movie: {\n    id,\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    genre_ids,\n  },\n  state,\n}) => {\n  return (\n    <MovieListItem>\n      <Link to={`/movies/${id}`} state={state}>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width=\"200\"\n          />\n        </MoviePoster>\n        <Tooltip\n          title=\"Click for watch more\"\n          describeChild\n          PopperProps={{\n            sx: {\n              '& .MuiTooltip-tooltip': {\n                bgcolor: '#B9E4C9',\n                color: '#000',\n                width: '250px',\n                textAlign: 'center',\n              },\n            },\n          }}\n        >\n          <MovieTitle>{title}</MovieTitle>\n        </Tooltip>\n\n        {release_date && <ReleaseDate>{parseInt(release_date)}</ReleaseDate>}\n        {vote_average !== 0 && (\n          <Stars>\n            <Rating\n              style={{\n                position: 'absolute',\n                top: '0',\n                right: '0',\n              }}\n              name=\"read-only\"\n              defaultValue={(vote_average / 10) * 5}\n              precision={0.5}\n              size=\"small\"\n              readOnly\n            />\n          </Stars>\n        )}\n        {vote_average !== 0 && (\n          <CircleRating>\n            <RatingProgressbar rating={vote_average.toFixed(1)} />\n          </CircleRating>\n        )}\n      </Link>\n      <GenresBlock>\n        <Genres data={genre_ids?.slice(0, 1)} />\n      </GenresBlock>\n    </MovieListItem>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n  state: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MovieListStyled } from './MovieGallery.styled';\nimport { MovieGalleryItem } from 'modules/MovieGalleryItem/MovieGalleryItem';\n\nexport const MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(movie => (\n        <MovieGalleryItem\n          key={movie.id}\n          movie={movie}\n          state={{ from: location }}\n        />\n      ))}\n    </MovieListStyled>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const HomeBlock = styled.div`\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  padding-right: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  margin: 0 auto;\n  padding: ${({ theme }) => theme.space[3]}px;\n\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  background-color: transparent;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    height: 100%;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-top: ${({ theme }) => theme.space[3]}px;\n  padding-bottom: ${({ theme }) => theme.space[3]}px;\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.m};\n  font-weight: 700;\n`;\n\nexport const CircleRating = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 42px;\n  height: 42px;\n\n  text-shadow: 0 0.3px 0.3px #000;\n  border-radius: 50%;\n  padding: 4px;\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  bottom: 48px;\n  right: 10px;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Rating } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport NoPoster from 'assets/no-poster.jpg';\nimport {\n  CircleRating,\n  GenresBlock,\n  MovieListItem,\n  MoviePoster,\n} from './CardFilm.styled';\nimport { RatingProgressbar } from 'components/RatingProgressbar/RatingProgressbar';\nimport { Genres } from 'components/Genres/Genres';\nimport { useTranslation } from 'react-i18next';\n\nexport const CardFilm = ({\n  movie: { id, poster_path, original_title, vote_average, genre_ids },\n}) => {\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n  return (\n    <MovieListItem>\n      <Link to={`/movies/${id}`}>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width=\"200\"\n          />\n        </MoviePoster>\n        {vote_average !== 0 && (\n          <>\n            <CircleRating>\n              <RatingProgressbar rating={vote_average?.toFixed(1)} />\n            </CircleRating>\n            <Rating\n              name=\"read-only\"\n              defaultValue={(vote_average / 10) * 5}\n              precision={0.5}\n              size=\"middle\"\n              readOnly\n            />\n          </>\n        )}\n        <GenresBlock>\n          <Genres data={genre_ids?.slice(0, 2)} lng={lng} />\n        </GenresBlock>\n      </Link>\n    </MovieListItem>\n  );\n};\n\nCardFilm.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  flex: 1 0 auto;\n  //   flex-grow: 1;\n  //   flex-shrink: 1;\n  //   flex-basis: auto;\n\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  img {\n    opacity: 0.5;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 450px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const SectionHero = styled.section`\n  position: relative;\n  margin-top: -70px;\n  margin-bottom: 30px;\n  padding-top: 84px;\n  padding-bottom: 84px;\n  background-color: rgba(0, 0, 0, 1);\n\n  @media screen and (min-width: 768px) {\n    padding-top: 100px;\n    padding-bottom: 100px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-top: 120px;\n    padding-bottom: 120px;\n  }\n`;\nexport const HeroContainer = styled.section`\n  display: flex;\n  align-items: center;\n  padding: 0;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 100%;\n  height: 450px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BackdropImg,\n  GradientBlockBottom,\n  GradientBlockTop,\n  HeroContainer,\n  SectionHero,\n} from './HeroBanner.styled';\nimport HeroPoster from 'assets/heroBanner.jpg';\n\nexport const HeroBanner = ({ movies }) => {\n  const poster_path = movies[Math.floor(Math.random() * 20)]?.poster_path;\n  // const {poster_path} = movies[Math.floor(Math.random() * 20)];\n  return (\n    <>\n      <SectionHero>\n        <HeroContainer>\n          <GradientBlockTop></GradientBlockTop>\n          {/*  <BackdropImg>\n            <img src={HeroPoster} alt=\"poster opacity\" width=\"1200\" />\n          </BackdropImg> */}\n          {poster_path ? (\n            <BackdropImg>\n              <img\n                src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                alt=\"poster opacity\"\n                width=\"1200\"\n              />\n            </BackdropImg>\n          ) : (\n            <BackdropImg>\n              <img src={HeroPoster} alt=\"poster opacity\" width=\"1200\" />\n            </BackdropImg>\n          )}\n          <GradientBlockBottom></GradientBlockBottom>\n        </HeroContainer>\n      </SectionHero>\n    </>\n  );\n};\n\nHeroBanner.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { HomeBlock } from './HomePage.styled';\nimport { Title } from 'components/Title/Title';\nimport Pagination from 'components/Pagination/Pagination';\nimport { MovieGallery } from 'modules/MovieGallery/MovieGallery';\nimport { Loader } from 'components/Loader/Loader';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { getPopularMovies, getTopRatedMovies } from 'services/themoviedbAPI';\n// import { langs } from 'services/i18next';\n\n// CAROUSEL SWIPER IMPORT\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/autoplay';\nimport 'swiper/css/effect-cards';\nimport 'swiper/css/effect-coverflow';\nimport { EffectCoverflow, Navigation } from 'swiper';\n\nimport { CardFilm } from 'components/CardFilm/CardFilm';\nimport Grid2 from '@mui/material/Unstable_Grid2';\nimport { HeroBanner } from 'components/HeroBanner/HeroBanner';\nimport { useTranslation } from 'react-i18next';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n  const { t } = useTranslation();\n\n  //console.log(page);\n  const location = useLocation();\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const data = await getPopularMovies(page, lng);\n        //console.log(lng);\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [page, lng, location.search]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const data = await getTopRatedMovies(lng);\n        //console.log(data);\n        setTopMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [page, lng, location.search]);\n\n  if (!movies) {\n    return <Loader />;\n  }\n\n  return (\n    <HomeBlock>\n      {isLoading && <Loader />}\n      {/*  якщо запит відбувся з помилкою - рендериться дефолтне зображення з\n      повідомленням помилки */}\n      {error && <ImageErrorView message=\"Oops, mistake... Please try again\" />}\n      {!error && topMovies.length > 0 && (\n        <>\n          <HeroBanner movies={movies} />\n          <Grid2\n            container\n            spacing={1}\n            rowSpacing={1}\n            mb={6}\n            component=\"section\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Title title={t('homePage.top_title')} />\n            <Grid2 container spacing={1} padding=\"8px\" mb={5}>\n              <Swiper\n                effect={'coverflow'}\n                grabCursor={true}\n                centeredSlides={true}\n                modules={[EffectCoverflow, Navigation]}\n                loop={true}\n                slidesPerView={'auto'}\n                coverflowEffect={{\n                  rotate: 0,\n                  stretch: 0,\n                  depth: 100,\n                  modifier: 2.5,\n                }}\n                breakpoints={{\n                  // when window width is >= 320px\n                  320: {\n                    slidesPerView: 1,\n                    spaceBetween: 0,\n                  },\n                  // when window width is >= 640px\n                  640: {\n                    slidesPerView: 4,\n                    spaceBetween: 20,\n                  },\n                  // when window width is >= 1040px\n                  1040: {\n                    slidesPerView: 5,\n                    spaceBetween: 50,\n                  },\n                }}\n              >\n                {topMovies.map(movie => {\n                  return (\n                    <SwiperSlide key={movie.id}>\n                      <CardFilm movie={movie} />\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n            </Grid2>\n          </Grid2>\n          <Title title={t('homePage.trending_title')} />\n          <MovieGallery movies={movies} />\n          <Pagination\n            pageCount={totalPages}\n            setSearchParams={setSearchParams}\n            params={params}\n            currentPage={page - 1}\n          />\n        </>\n      )}\n    </HomeBlock>\n  );\n};\n\nexport default HomePage;\n"],"names":["Paginate","styled","ReactPaginate","props","theme","colors","accent","buttonShadow","pageCount","setSearchParams","params","currentPage","initialPage","nextLabel","onPageChange","e","page","selected","breakLabel","previousLabel","pageRangeDisplayed","marginPagesDisplayed","renderOnZeroPageCount","onPageActive","window","scrollTo","top","behavior","MainTitle","space","text","fontSizes","m","fonts","heading","l","Title","title","MovieListStyled","MovieListItem","MoviePoster","MovieTitle","cardsTextColor","textShadow","s","ReleaseDate","xs","CircleRating","Stars","GenresBlock","MovieGalleryItem","movie","id","poster_path","original_title","release_date","vote_average","genre_ids","state","to","src","NoPoster","alt","width","Tooltip","describeChild","PopperProps","sx","bgcolor","color","textAlign","parseInt","Rating","style","position","right","name","defaultValue","precision","size","readOnly","RatingProgressbar","rating","toFixed","Genres","data","slice","MovieGallery","movies","location","useLocation","map","from","HomeBlock","CardFilm","lng","useTranslation","i18n","language","BackdropImg","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","SectionHero","HeroContainer","HeroBanner","Math","floor","random","HeroPoster","useState","setMovies","topMovies","setTopMovies","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","useMemo","Object","fromEntries","Number","t","useEffect","getPopularMovies","results","total_pages","console","log","message","search","getTopRatedMovies","Loader","ImageErrorView","length","Grid2","container","spacing","rowSpacing","mb","component","display","justifyContent","alignItems","padding","effect","grabCursor","centeredSlides","modules","EffectCoverflow","Navigation","loop","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","breakpoints","spaceBetween","Pagination"],"sourceRoot":""}
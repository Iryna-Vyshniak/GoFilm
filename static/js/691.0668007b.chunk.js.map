{"version":3,"file":"static/js/691.0668007b.chunk.js","mappings":"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","sources":["components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","modules/Cast/Cast.styled.jsx","modules/Cast/Cast.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n  margin: 1vh auto;\n`;\n\nexport const Text = styled.p`\n  max-width: 80%;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  text-align: center;\n  \n  font-family: ${props => props.theme.fonts.heading}\n  font-size: ${props => props.theme.fontSizes.s}\n`;\n\nexport const Hero = styled.img`\n  width: 50vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n  margin: 0 auto;\n`;\n\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n  flex: 1 0 auto;\n\n  img {\n    opacity: 0.8;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 45vw;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const BlockHero = styled.div`\n  position: relative;\n  margin-top: -30px;\n  margin-bottom: 30px;\n`;\nexport const HeroContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import HeroImg from 'assets/error.png';\nimport {\n  BlockHero,\n  GradientBlockBottom,\n  GradientBlockTop,\n  Hero,\n  HeroContainer,\n  Text,\n  Wrapper,\n} from './ImageErrorView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return (\n    <Wrapper role=\"alert\">\n      <Text>{message}</Text>\n      <BlockHero>\n        <HeroContainer>\n          <GradientBlockTop></GradientBlockTop>\n          <Hero src={HeroImg} alt=\"Actor\" width=\"240\" />\n          <GradientBlockBottom></GradientBlockBottom>\n        </HeroContainer>\n      </BlockHero>\n    </Wrapper>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 0.4px 0.4px #fff, 0 0.4px 0.4px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n  letter-spacing: 1.5px;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  text-align: center;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  max-width: 100%;\n  width: 180px;\n  height: 100%;\n\n  border-radius: 8px;\n  border: none;\n  outline: none;\n\n  box-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n  -webkit-box-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n  -moz-box-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n\n  font-size: 12px;\n  font-weight: 700;\n  overflow: hidden;\n`;\n\nexport const CastPhotoThumb = styled.div`\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 10px;\n`;\n\nexport const CastPhoto = styled.img`\n  display: block;\n  min-height: 100%;\n  height: 240px;\n  width: 100%;\n\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  transition: transform 250ms linear;\n  transform: scale(1);\n\n  object-fit: cover;\n  object-position: center;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Wrap = styled.div`\n  flex-direction: column;\n  align-items: center;\n  flex: 1 0 auto;\n  padding: 4px;\n`;\n\nexport const MovieHero = styled.span`\n  color: ${props => props.theme.colors.accent};\n`;\n\nexport const ActorsName = styled.h3`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n  color: ${({ theme }) => theme.text};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: 500;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.s};\n  }\n`;\n\nexport const ActorsCharacter = styled.p`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n  color: ${({ theme }) => theme.text};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: 500;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.s};\n  }\n`;\n","import ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from 'components/Title/Title';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMoviesCast } from 'services/themoviedbAPI';\nimport {\n  ActorsCharacter,\n  ActorsName,\n  CastItem,\n  CastList,\n  CastPhoto,\n  CastPhotoThumb,\n  MovieHero,\n  Wrap,\n} from './Cast.styled';\nimport Avatar from 'assets/avatar.jpg';\nimport { useTranslation } from 'react-i18next';\n\nconst Cast = ({ lng }) => {\n  //console.log('Cast:', lng);\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const data = await getMoviesCast(movieId, lng);\n        setCastList(data);\n      } catch (error) {\n        setError(`{t('moviesPage.set_error')}`);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId, lng]);\n\n  if (!castList) {\n    return <div>{t('loading')}</div>;\n  }\n\n  return (\n    <>\n      <Title title={t('moviesPage.cast')} />\n      {isLoading && <Loader />}\n      {error && <ImageErrorView message={t('moviesPage.mistake')} />}\n      {error && !isLoading && (\n        <span style={{ color: 'red' }}>{t('moviesPage.cast_desription')}</span>\n      )}\n      {castList.length > 0 ? (\n        <CastList>\n          {castList.map(actor => (\n            <Link\n              to={`/actors/${actor.id}`}\n              state={{ from: location }}\n              key={actor.id}\n            >\n              <CastItem key={actor.id}>\n                <CastPhotoThumb>\n                  <CastPhoto\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n                        : Avatar\n                    }\n                    alt={actor.name}\n                    width=\"120\"\n                  />\n                </CastPhotoThumb>\n\n                <Wrap>\n                  <ActorsName>{actor.name}</ActorsName>\n                  {actor.character && (\n                    <ActorsCharacter>\n                      {t('moviesPage.character')}\n                      <MovieHero>{actor.character}</MovieHero>\n                    </ActorsCharacter>\n                  )}\n                </Wrap>\n              </CastItem>\n            </Link>\n          ))}\n        </CastList>\n      ) : (\n        <div style={{ padding: '26px', textAlign: 'center' }}>\n          {t('moviesPage.cast_desription')}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  lng: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n  // language: 'en' / 'uk',\n};\n\nexport const getPopularMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getTopRatedMovies = async lng => {\n  try {\n    const { data } = await axios.get(`/movie/top_rated`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\n// export const getMoviesByQuery = async (query, page = 1, lng, controller) => {\n//   try {\n//     const { data } = await axios.get('/search/movie', {\n//       signal: controller.signal,\n//       params: {\n//         query,\n//         page,\n//         include_adult: false,\n//         language: lng,\n//       },\n//     });\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie with that name');\n//   }\n// };\n\nexport const getMoviesByQuery = async (page = 1, query = '', lng) => {\n  try {\n    const urlParam = query\n      ? `/search/movie?page=${page}&query=${query}&language=${lng}`\n      : `/movie/upcoming?page=${page}&language=${lng}`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesCast = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\nexport const getVideosMovies = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie`s videos');\n  }\n};\n\nexport const getGenresMovies = async lng => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesWithGenres = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(\n      `/discover/movie?with_genres=${movieId}&sort_by=popularity.desc&page=1&language=${lng}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getGenresMovies = async controller => {\n//   try {\n//     const { data } = await axios.get(`genre/movie/list`, {\n//       signal: controller.signal,\n//     });\n//     return data.genres;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n\nexport const getActorsPopular = async lng => {\n  try {\n    const { data } = await axios.get(`person/popular`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getActorDetailInfo = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`/person/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getActors = async (page = 1, query = '', lng) => {\n  try {\n    const urlParam = query\n      ? `/search/person?page=${page}&query=${query}&language=${lng}`\n      : `/person/popular?page=${page}&language=${lng}`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesbyActors = async (personId, lng) => {\n  try {\n    const { data } = await axios.get(`/person/${personId}/movie_credits`, {\n      params: {\n        page: 1,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getLanguages = async () => {\n//   try {\n//     const { data } = await axios.get(`/configuration/primary_translations`);\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n"],"names":["Wrapper","styled","Text","props","theme","colors","accent","shadows","textShadow","fonts","heading","fontSizes","s","Hero","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","BlockHero","HeroContainer","ImageErrorView","message","role","src","HeroImg","alt","width","MainTitle","space","m","l","Title","title","CastList","CastItem","CastPhotoThumb","CastPhoto","Wrap","MovieHero","ActorsName","text","xs","ActorsCharacter","lng","location","useLocation","movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","error","setError","t","useTranslation","useEffect","getMoviesCast","data","Loader","style","color","length","map","actor","to","id","state","from","profile_path","Avatar","name","character","padding","textAlign","axios","api_key","include_adult","getPopularMovies","page","params","language","Error","getTopRatedMovies","getMoviesByQuery","query","urlParam","getMoviesDetailsById","cast","getMoviesReviews","results","getVideosMovies","getGenresMovies","genres","getMoviesWithGenres","getActorsPopular","getActorDetailInfo","getActors","getMoviesbyActors","personId"],"sourceRoot":""}
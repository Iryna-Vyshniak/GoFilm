{"version":3,"file":"static/js/999.e28f23ba.chunk.js","mappings":"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","sources":["components/Genres/Genres.styled.jsx","components/Genres/Genres.jsx","components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/RatingProgressbar/RatingProgressbar.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GenresBlock = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\nexport const Genre = styled.li`\n  background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n  color: rgb(0, 0, 0);\n  text-shadow: 0 0.4px 0.4px #fff;\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-weight: bold;\n  border-radius: 5px;\n  padding: 0 6px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getGenresMovies } from 'services/themoviedbAPI';\nimport { Genre, GenresBlock } from './Genres.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const Genres = ({ data }) => {\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n  // genres\n  useEffect(() => {\n    // const abortController = new AbortController();\n    (async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // const genresData = await getGenresMovies(abortController);\n        // setError(null);\n        const genresData = await getGenresMovies(lng);\n        // console.log(lng);\n        setGenres(genresData);\n      } catch (error) {\n        setError('Something went wrong, reload the page, it might help ðŸ¥¹');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n    // return () => abortController.abort();\n  }, [lng]);\n\n  return (\n    <>\n      {genres && (\n        <GenresBlock>\n          {genres?.map(genre => {\n            if (data.includes(genre.id)) {\n              return <Genre key={genre.id}>{genre.name}</Genre>;\n            }\n            return null;\n          })}\n        </GenresBlock>\n      )}\n\n      {error && !isLoading && console.log('Oops, mistake... Please try again')}\n    </>\n  );\n};\n\nGenres.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n  margin: 1vh auto;\n`;\n\nexport const Text = styled.p`\n  max-width: 80%;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  text-align: center;\n  \n  font-family: ${props => props.theme.fonts.heading}\n  font-size: ${props => props.theme.fontSizes.s}\n`;\n\nexport const Hero = styled.img`\n  width: 50vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n  margin: 0 auto;\n`;\n\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n  flex: 1 0 auto;\n\n  img {\n    opacity: 0.8;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 45vw;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const BlockHero = styled.div`\n  position: relative;\n  margin-top: -30px;\n  margin-bottom: 30px;\n`;\nexport const HeroContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import HeroImg from 'assets/error.png';\nimport {\n  BlockHero,\n  GradientBlockBottom,\n  GradientBlockTop,\n  Hero,\n  HeroContainer,\n  Text,\n  Wrapper,\n} from './ImageErrorView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return (\n    <Wrapper role=\"alert\">\n      <Text>{message}</Text>\n      <BlockHero>\n        <HeroContainer>\n          <GradientBlockTop></GradientBlockTop>\n          <Hero src={HeroImg} alt=\"Actor\" width=\"240\" />\n          <GradientBlockBottom></GradientBlockBottom>\n        </HeroContainer>\n      </BlockHero>\n    </Wrapper>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport const RatingProgressbar = ({ rating }) => {\n  return (\n    <CircularProgressbar\n      value={rating}\n      maxValue={10}\n      text={rating}\n      background\n      backgroundPadding={6}\n      styles={buildStyles({\n        pathColor: rating < 5 ? 'red' : rating < 7 ? 'orangered' : 'green',\n        height: '100%',\n        width: '100%',\n        textSize: '38px',\n        fontWeight: '700',\n        strokeLinecap: 'butt',\n        transition: 'stroke-dashoffset 0.5s ease 0s',\n        transform: 'rotate(0.25turn)',\n        transformOrigin: 'center center',\n        pathTransitionDuration: 0.5,\n        textColor: 'rgb(255, 0, 0)',\n        trailColor: '#fff',\n        backgroundColor: '#fff',\n      })}\n    />\n  );\n};\n\nRatingProgressbar.propTypes = {\n  rating: PropTypes.string,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n  // language: 'en' / 'uk',\n};\n\nexport const getPopularMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getTopRatedMovies = async lng => {\n  try {\n    const { data } = await axios.get(`/movie/top_rated`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\n// export const getMoviesByQuery = async (query, page = 1, lng, controller) => {\n//   try {\n//     const { data } = await axios.get('/search/movie', {\n//       signal: controller.signal,\n//       params: {\n//         query,\n//         page,\n//         include_adult: false,\n//         language: lng,\n//       },\n//     });\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie with that name');\n//   }\n// };\n\nexport const getMoviesByQuery = async (page = 1, query = '', lng) => {\n  try {\n    const urlParam = query\n      ? `/search/movie?page=${page}&query=${query}&language=${lng}`\n      : `/movie/upcoming?page=${page}&language=${lng}`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesCast = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\nexport const getVideosMovies = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie`s videos');\n  }\n};\n\nexport const getGenresMovies = async lng => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesWithGenres = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(\n      `/discover/movie?with_genres=${movieId}&sort_by=popularity.desc&page=1&language=${lng}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getGenresMovies = async controller => {\n//   try {\n//     const { data } = await axios.get(`genre/movie/list`, {\n//       signal: controller.signal,\n//     });\n//     return data.genres;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n\nexport const getActorsPopular = async lng => {\n  try {\n    const { data } = await axios.get(`person/popular`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getActorDetailInfo = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`/person/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getActors = async (page = 1, query = '', lng) => {\n  try {\n    const urlParam = query\n      ? `/search/person?page=${page}&query=${query}&language=${lng}`\n      : `/person/popular?page=${page}&language=${lng}`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesbyActors = async (personId, lng) => {\n  try {\n    const { data } = await axios.get(`/person/${personId}/movie_credits`, {\n      params: {\n        page: 1,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getNowPlayingMovies = async lng => {\n  try {\n    const { data } = await axios.get(`/movie/now_playing`, {\n      params: {\n        page: 1,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getLanguages = async () => {\n//   try {\n//     const { data } = await axios.get(`/configuration/primary_translations`);\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n"],"names":["GenresBlock","styled","Genre","props","theme","fontSizes","xs","s","Genres","data","useState","genres","setGenres","isLoading","setIsLoading","error","setError","lng","useTranslation","i18n","language","useEffect","getGenresMovies","genresData","map","genre","includes","id","name","console","log","Wrapper","Text","colors","accent","shadows","textShadow","fonts","heading","Hero","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","BlockHero","HeroContainer","ImageErrorView","message","role","src","HeroImg","alt","width","RatingProgressbar","rating","value","maxValue","text","background","backgroundPadding","styles","buildStyles","pathColor","height","textSize","fontWeight","strokeLinecap","transition","transform","transformOrigin","pathTransitionDuration","textColor","trailColor","backgroundColor","axios","api_key","include_adult","getPopularMovies","page","params","Error","getTopRatedMovies","getMoviesByQuery","query","urlParam","getMoviesDetailsById","movieId","getMoviesCast","cast","getMoviesReviews","results","getVideosMovies","getMoviesWithGenres","getActorsPopular","getActorDetailInfo","getActors","getMoviesbyActors","personId"],"sourceRoot":""}
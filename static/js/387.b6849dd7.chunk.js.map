{"version":3,"file":"static/js/387.b6849dd7.chunk.js","mappings":"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","sources":["components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n  margin: 1vh auto;\n`;\n\nexport const Text = styled.p`\n  max-width: 80%;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  text-align: center;\n  \n  font-family: ${props => props.theme.fonts.heading}\n  font-size: ${props => props.theme.fontSizes.xl}\n`;\n\nexport const ErrorImg = styled.img`\n  width: 25vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n  margin-bottom: 24px;\n`;\n","import { ErrorImg, Text, Wrapper } from './ImageErrorView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return (\n    <Wrapper role=\"alert\">\n      <ErrorImg src=\"\" width=\"240\" alt=\"\" />\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const LoaderBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(185, 228, 201, 0.7);\n`;\n\nexport const PendingDog = styled.img`\n  position: absolute;\n  top: 35%;\n  left: 45%;\n  margin: 0 auto;\n  width: 15vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n`;\n","import React from 'react';\nimport { LoaderBackdrop, PendingDog } from './Loader.styled';\nimport DotLoader from 'react-spinners/DotLoader';\n\nexport const Loader = () => {\n  return (\n    <LoaderBackdrop>\n      <DotLoader\n        color=\"#f68000\"\n        size={150}\n        cssOverride={{ position: 'absolute', top: '25%', left: '45%' }}\n      />\n      <PendingDog src='' alt='' />\n    </LoaderBackdrop>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 26px;\n`;\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 12px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n`;\nexport const ReviewPhotoThumb = styled.div`\n  position: relative;\n`;\n\nexport const ReviewPhoto = styled.img`\n  display: block;\n\n  height: 60px;\n  width: auto;\n\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const ReviewsAuthor = styled.p`\n  color: ${props => props.theme.colors.accent};\n  font-weight: 700;\n`;\nexport const ReviewContent = styled.p`\n  font-style: italic;\n  font-weight: 400;\n`;\n","import { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from 'components/Title/Title';\nimport { getMoviesReviews } from 'services/themoviedbAPI';\nimport Avatar from 'assets/avatar.png';\nimport {\n  ReviewContent,\n  ReviewItem,\n  ReviewPhoto,\n  ReviewPhotoThumb,\n  ReviewsAuthor,\n  ReviewsList,\n  Wrap,\n} from './Reviews.styled';\n\nexport const Reviews = () => {\n  //const params = useParams();\n  const { movieId } = useParams();\n  //console.log(movieId);\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const data = await getMoviesReviews(movieId);\n        setMovieReviews(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Title title=\"Reviews\" />\n      {isLoading && <Loader />}\n      {error && <ImageErrorView message=\"Oops, mistake! Please try again\" />}\n      {movieReviews.length !== 0 ? (\n        <ReviewsList>\n          {movieReviews.map(review => (\n            <ReviewItem key={review.id}>\n              <Wrap>\n                <ReviewPhotoThumb>\n                  <ReviewPhoto\n                    src={\n                      !review.avatar_path\n                        ? Avatar\n                        : `https://secure.gravatar.com/avatar${review.avatar_path}`\n                    }\n                    alt={review.author}\n                  />\n                </ReviewPhotoThumb>\n                <ReviewsAuthor>Author: {review.author}</ReviewsAuthor>\n              </Wrap>\n              <ReviewContent>{review.content}</ReviewContent>\n            </ReviewItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        <div style={{ padding: '26px', textAlign: 'center' }}>\n          We don't have any reviews for this movie\n        </div>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 1px 1px #fff, 1px 1px 1px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n        include_adult: false,\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesDetailsById = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\nexport const getVideosMovies = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie`s videos');\n  }\n};\n\nexport const getGenresMovies = async () => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`);\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n"],"names":["Wrapper","styled","Text","props","theme","colors","accent","shadows","textShadow","fonts","heading","fontSizes","xl","ErrorImg","ImageErrorView","message","role","src","width","alt","LoaderBackdrop","PendingDog","Loader","color","size","cssOverride","position","top","left","ReviewsList","ReviewItem","Wrap","ReviewPhotoThumb","ReviewPhoto","ReviewsAuthor","ReviewContent","Reviews","movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","useEffect","getMoviesReviews","data","console","log","Title","title","length","map","review","avatar_path","Avatar","author","content","id","style","padding","textAlign","MainTitle","space","m","l","axios","api_key","getPopularMovies","page","params","Error","getMoviesByQuery","query","include_adult","language","getMoviesDetailsById","getMoviesCast","cast","results","getVideosMovies"],"sourceRoot":""}
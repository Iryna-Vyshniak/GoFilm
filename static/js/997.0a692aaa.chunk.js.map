{"version":3,"file":"static/js/997.0a692aaa.chunk.js","mappings":"gTAEaA,EAAYC,EAAAA,GAAAA,IAAH,yLACJ,qBAAGC,MAAkBC,MAAM,EAA3B,IACC,qBAAGD,MAAkBC,MAAM,EAA3B,IACJ,qBAAGD,MAAkBE,UAAUC,CAA/B,IAIE,qBAAGH,MAAkBE,UAAUE,CAA/B,I,kHCPJC,EAAgBN,EAAAA,GAAAA,GAAH,47BASb,qBAAGC,MAAkBC,MAAM,EAA3B,IA0CAK,EAAcP,EAAAA,GAAAA,IAAH,qEAwBXQ,GAnBaR,EAAAA,GAAAA,GAAH,gUACN,qBAAGC,MAAkBC,MAAM,EAA3B,IACG,qBAAGD,MAAkBC,MAAM,EAA3B,IACF,qBAAGD,MAAkBC,MAAM,EAA3B,IACC,qBAAGD,MAAkBC,MAAM,EAA3B,IAOR,qBAAGD,MAAkBQ,cAArB,IACM,qBAAGR,MAAkBS,UAArB,IAGF,SAAAC,GAAK,OAAIA,EAAMV,MAAME,UAAUS,CAA1B,IAIQZ,EAAAA,GAAAA,IAAH,uQAiBZa,EAAcb,EAAAA,GAAAA,IAAH,gF,uCC/EXc,EAAW,SAAC,GAElB,IAAD,IADJC,MAASC,EACL,EADKA,GAAIC,EACT,EADSA,YAAaC,EACtB,EADsBA,eAAgBC,EACtC,EADsCA,aAAcC,EACpD,EADoDA,UAGlDC,GADWC,EAAAA,EAAAA,MAATC,KACSC,SACjB,OACE,SAAClB,EAAD,WACE,UAAC,KAAD,CAAMmB,GAAE,kBAAaT,GAArB,WACE,SAACT,EAAD,WACE,gBACEmB,IACET,EAAW,6CAC+BA,GACtCU,EAENC,IAAKV,EACLW,MAAM,UAGQ,IAAjBV,IACC,iCACE,SAACX,EAAD,WACE,SAACsB,EAAA,EAAD,CAAmBC,OAAM,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAca,QAAQ,QAEnD,SAACC,EAAA,EAAD,CACEC,KAAK,YACLC,aAAehB,EAAe,GAAM,EACpCiB,UAAW,GACXC,KAAK,SACLC,UAAQ,QAId,SAACzB,EAAD,WACE,SAAC0B,EAAA,EAAD,CAAQC,KAAI,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAWqB,MAAM,EAAG,GAAIpB,IAAKA,UAKpD,E,UCpDYqB,EAAc1C,EAAAA,GAAAA,IAAH,wVAwBX2C,EAAmB3C,EAAAA,GAAAA,IAAH,+HAQb,qBAAGC,MAAkB2C,aAArB,IAGHC,EAAsB7C,EAAAA,GAAAA,IAAH,iIAOhB,qBAAGC,MAAkB6C,kBAArB,IAGHC,EAAc/C,EAAAA,GAAAA,QAAH,8XAiBXgD,EAAgBhD,EAAAA,GAAAA,QAAH,mN,UCrDbiD,EAAa,SAAC,GAAgB,IAAD,EAClChC,EAAW,UADuB,EAAbiC,OACAC,KAAKC,MAAsB,GAAhBD,KAAKE,kBAA1B,aAAG,EAAwCpC,YAE5D,OACE,+BACE,SAAC8B,EAAD,WACE,UAACC,EAAD,YACE,SAACL,EAAD,IACC1B,GACC,SAACyB,EAAD,WACE,gBACEhB,IAAG,6CAAwCT,GAC3CW,IAAI,iBACJC,MAAM,YAIV,SAACa,EAAD,WACE,gBAAKhB,IAAK4B,EAAY1B,IAAI,iBAAiBC,MAAM,YAGrD,SAACgB,EAAD,UAKT,EC8ID,EAvJiB,WACf,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAAkCD,EAAAA,EAAAA,UAAS,IAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAoCL,EAAAA,EAAAA,UAAS,GAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KACA,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,KACA,GAA0BT,EAAAA,EAAAA,WAAS,GAAnC,eAAOU,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAEC,KAAM,IAAhE,eAAOC,EAAP,KAAqBC,EAArB,KAGMjD,GADWC,EAAAA,EAAAA,MAATC,KACSC,SAEX+C,GAASC,EAAAA,EAAAA,UACb,kBAAMC,OAAOC,aAAP,OAAuBL,GAA7B,GACA,CAACA,IAEGD,EAAOO,OAAOJ,EAAOH,MAAQ,GAC3BQ,GAAMtD,EAAAA,EAAAA,MAANsD,EAEFC,GAAWC,EAAAA,EAAAA,MAsDjB,OAnDAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGf,GAAa,GACbE,GAAS,GAHZ,UAKsBc,EAAAA,EAAAA,IAAiBZ,EAAM/C,GAL7C,OAKSmB,EALT,OAMGgB,EAAUhB,EAAKyC,SACfnB,EAActB,EAAK0C,aAPtB,kDASGC,QAAQC,IAAI,KAAMC,SATrB,yBAWGrB,GAAa,GAXhB,4EAAD,EAcD,GAAE,CAACI,EAAM/C,EAAKwD,EAASS,UAGxBP,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGf,GAAa,GACbE,GAAS,GAHZ,UAKsBqB,EAAAA,EAAAA,IAAkBlE,GALxC,OAKSmB,EALT,OAMGkB,EAAalB,EAAKyC,SANrB,gDAQGE,QAAQC,IAAI,KAAMC,SARrB,yBAUGrB,GAAa,GAVhB,2EAAD,EAaD,GAAE,CAACI,EAAM/C,EAAKwD,EAASS,UAGxBP,EAAAA,EAAAA,YAAU,YACR,mCAAC,oGAEGf,GAAa,GACbE,EAAS,MAHZ,UAK4BsB,EAAAA,EAAAA,IAAgBnE,GAL5C,OAKSoE,EALT,OAMG7B,EAAU6B,GANb,gDAQGvB,EAAS,qEARZ,yBAUGF,GAAa,GAVhB,4EAAD,sDAaD,GAAE,CAAC3C,IAEC6B,GAKH,UAACnD,EAAD,WACGgE,IAAa,SAAC2B,EAAA,EAAD,IACbzB,IAAS,SAAC0B,EAAA,EAAD,CAAgBN,QAAQ,uCAChCpB,GAASR,EAAUmC,OAAS,IAC5B,iCACE,SAAC3C,EAAD,CAAYC,OAAQA,KACpB,UAAC2C,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,WAAY,EACZC,GAAI,EACJC,UAAU,UACVC,QAAQ,OACRC,eAAe,SACfC,WAAW,SARb,WAUE,SAACC,EAAA,EAAD,CAAOC,MAAO3B,EAAE,yBAChB,SAACiB,EAAA,EAAD,CAAOC,WAAS,EAACC,QAAS,EAAGS,QAAQ,MAAMP,GAAI,EAA/C,UACE,SAAC,KAAD,CACEQ,OAAQ,YACRC,YAAY,EACZC,gBAAgB,EAChBC,QAAS,CAACC,EAAAA,GAAiBC,EAAAA,IAC3BC,MAAM,EACNC,cAAe,OACfC,gBAAiB,CACfC,OAAQ,EACRC,QAAS,EACTC,MAAO,IACPC,SAAU,KAEZC,YAAa,CAEX,IAAK,CACHN,cAAe,EACfO,aAAc,GAGhB,IAAK,CACHP,cAAe,EACfO,aAAc,IAGhB,KAAM,CACJP,cAAe,EACfO,aAAc,KA3BpB,SA+BG9D,EAAU+D,KAAI,SAAAzG,GACb,OACE,SAAC,KAAD,WACE,SAACD,EAAD,CAAUC,MAAOA,KADDA,EAAMC,GAI3B,YAIP,SAACsF,EAAA,EAAD,CAAOC,MAAO3B,EAAE,8BAChB,SAAC6C,EAAA,EAAD,CAAcvE,OAAQA,EAAQS,OAAQA,KACtC,SAAC+D,EAAA,EAAD,CACEC,UAAW9D,EACXS,gBAAiBA,EACjBC,OAAQA,EACRqD,YAAaxD,EAAO,WArErB,SAACsB,EAAA,EAAD,GA2EV,C","sources":["pages/HomePage/HomePage.styled.jsx","components/CardFilm/CardFilm.styled.jsx","components/CardFilm/CardFilm.jsx","components/HeroBanner/HeroBanner.styled.jsx","components/HeroBanner/HeroBanner.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HomeBlock = styled.div`\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  padding-right: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  margin: 0 auto;\n  padding: ${({ theme }) => theme.space[3]}px;\n\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  background-color: transparent;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    height: 100%;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-top: ${({ theme }) => theme.space[3]}px;\n  padding-bottom: ${({ theme }) => theme.space[3]}px;\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.m};\n  font-weight: 700;\n`;\n\nexport const CircleRating = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 42px;\n  height: 42px;\n\n  text-shadow: 0 0.3px 0.3px #000;\n  border-radius: 50%;\n  padding: 4px;\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  bottom: 48px;\n  right: 10px;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Rating } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport NoPoster from 'assets/no-poster.jpg';\nimport {\n  CircleRating,\n  GenresBlock,\n  MovieListItem,\n  MoviePoster,\n} from './CardFilm.styled';\nimport { RatingProgressbar } from 'components/RatingProgressbar/RatingProgressbar';\nimport { Genres } from 'components/Genres/Genres';\nimport { useTranslation } from 'react-i18next';\n\nexport const CardFilm = ({\n  movie: { id, poster_path, original_title, vote_average, genre_ids },\n}) => {\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n  return (\n    <MovieListItem>\n      <Link to={`/movies/${id}`}>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width=\"200\"\n          />\n        </MoviePoster>\n        {vote_average !== 0 && (\n          <>\n            <CircleRating>\n              <RatingProgressbar rating={vote_average?.toFixed(1)} />\n            </CircleRating>\n            <Rating\n              name=\"read-only\"\n              defaultValue={(vote_average / 10) * 5}\n              precision={0.5}\n              size=\"middle\"\n              readOnly\n            />\n          </>\n        )}\n        <GenresBlock>\n          <Genres data={genre_ids?.slice(0, 2)} lng={lng} />\n        </GenresBlock>\n      </Link>\n    </MovieListItem>\n  );\n};\n\nCardFilm.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  flex: 1 0 auto;\n  //   flex-grow: 1;\n  //   flex-shrink: 1;\n  //   flex-basis: auto;\n\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  img {\n    opacity: 0.5;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 450px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const SectionHero = styled.section`\n  position: relative;\n  margin-top: -70px;\n  margin-bottom: 30px;\n  padding-top: 84px;\n  padding-bottom: 84px;\n  background-color: rgba(0, 0, 0, 1);\n\n  @media screen and (min-width: 768px) {\n    padding-top: 100px;\n    padding-bottom: 100px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-top: 120px;\n    padding-bottom: 120px;\n  }\n`;\nexport const HeroContainer = styled.section`\n  display: flex;\n  align-items: center;\n  padding: 0;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 100%;\n  height: 450px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BackdropImg,\n  GradientBlockBottom,\n  GradientBlockTop,\n  HeroContainer,\n  SectionHero,\n} from './HeroBanner.styled';\nimport HeroPoster from 'assets/heroBanner.jpg';\n\nexport const HeroBanner = ({ movies }) => {\n  const poster_path = movies[Math.floor(Math.random() * 20)]?.poster_path;\n  // const {poster_path} = movies[Math.floor(Math.random() * 20)];\n  return (\n    <>\n      <SectionHero>\n        <HeroContainer>\n          <GradientBlockTop></GradientBlockTop>\n          {poster_path ? (\n            <BackdropImg>\n              <img\n                src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                alt=\"poster opacity\"\n                width=\"1200\"\n              />\n            </BackdropImg>\n          ) : (\n            <BackdropImg>\n              <img src={HeroPoster} alt=\"poster opacity\" width=\"1200\" />\n            </BackdropImg>\n          )}\n          <GradientBlockBottom></GradientBlockBottom>\n        </HeroContainer>\n      </SectionHero>\n    </>\n  );\n};\n\nHeroBanner.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { HomeBlock } from './HomePage.styled';\nimport { Title } from 'components/Title/Title';\nimport Pagination from 'components/Pagination/Pagination';\nimport { MovieGallery } from 'modules/MovieGallery/MovieGallery';\nimport { Loader } from 'components/Loader/Loader';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport {\n  getGenresMovies,\n  getPopularMovies,\n  getTopRatedMovies,\n} from 'services/themoviedbAPI';\n// import { langs } from 'services/i18next';\n\n// CAROUSEL SWIPER IMPORT\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/autoplay';\nimport 'swiper/css/effect-cards';\nimport 'swiper/css/effect-coverflow';\nimport { EffectCoverflow, Navigation } from 'swiper';\n\nimport { CardFilm } from 'components/CardFilm/CardFilm';\nimport Grid2 from '@mui/material/Unstable_Grid2';\nimport { HeroBanner } from 'components/HeroBanner/HeroBanner';\nimport { useTranslation } from 'react-i18next';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n  const { t } = useTranslation();\n\n  const location = useLocation();\n\n  // get popular movies\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const data = await getPopularMovies(page, lng);\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [page, lng, location.search]);\n\n  // get top rated movies\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const data = await getTopRatedMovies(lng);\n        setTopMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [page, lng, location.search]);\n\n  // get genres\n  useEffect(() => {\n    (async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const genresData = await getGenresMovies(lng);\n        setGenres(genresData);\n      } catch (error) {\n        setError('Something went wrong, reload the page, it might help 🥹');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [lng]);\n\n  if (!movies) {\n    return <Loader />;\n  }\n\n  return (\n    <HomeBlock>\n      {isLoading && <Loader />}\n      {error && <ImageErrorView message=\"Oops, mistake... Please try again\" />}\n      {!error && topMovies.length > 0 && (\n        <>\n          <HeroBanner movies={movies} />\n          <Grid2\n            container\n            spacing={1}\n            rowSpacing={1}\n            mb={6}\n            component=\"section\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Title title={t('homePage.top_title')} />\n            <Grid2 container spacing={1} padding=\"8px\" mb={5}>\n              <Swiper\n                effect={'coverflow'}\n                grabCursor={true}\n                centeredSlides={true}\n                modules={[EffectCoverflow, Navigation]}\n                loop={true}\n                slidesPerView={'auto'}\n                coverflowEffect={{\n                  rotate: 0,\n                  stretch: 0,\n                  depth: 100,\n                  modifier: 2.5,\n                }}\n                breakpoints={{\n                  // when window width is >= 320px\n                  320: {\n                    slidesPerView: 1,\n                    spaceBetween: 0,\n                  },\n                  // when window width is >= 640px\n                  640: {\n                    slidesPerView: 4,\n                    spaceBetween: 20,\n                  },\n                  // when window width is >= 1040px\n                  1040: {\n                    slidesPerView: 5,\n                    spaceBetween: 50,\n                  },\n                }}\n              >\n                {topMovies.map(movie => {\n                  return (\n                    <SwiperSlide key={movie.id}>\n                      <CardFilm movie={movie} />\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n            </Grid2>\n          </Grid2>\n          <Title title={t('homePage.trending_title')} />\n          <MovieGallery movies={movies} genres={genres} />\n          <Pagination\n            pageCount={totalPages}\n            setSearchParams={setSearchParams}\n            params={params}\n            currentPage={page - 1}\n          />\n        </>\n      )}\n    </HomeBlock>\n  );\n};\n\nexport default HomePage;\n"],"names":["HomeBlock","styled","theme","space","fontSizes","s","l","MovieListItem","MoviePoster","CircleRating","cardsTextColor","textShadow","props","m","GenresBlock","CardFilm","movie","id","poster_path","original_title","vote_average","genre_ids","lng","useTranslation","i18n","language","to","src","NoPoster","alt","width","RatingProgressbar","rating","toFixed","Rating","name","defaultValue","precision","size","readOnly","Genres","data","slice","BackdropImg","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","SectionHero","HeroContainer","HeroBanner","movies","Math","floor","random","HeroPoster","useState","setMovies","topMovies","setTopMovies","genres","setGenres","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","useSearchParams","page","searchParams","setSearchParams","params","useMemo","Object","fromEntries","Number","t","location","useLocation","useEffect","getPopularMovies","results","total_pages","console","log","message","search","getTopRatedMovies","getGenresMovies","genresData","Loader","ImageErrorView","length","Grid2","container","spacing","rowSpacing","mb","component","display","justifyContent","alignItems","Title","title","padding","effect","grabCursor","centeredSlides","modules","EffectCoverflow","Navigation","loop","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","breakpoints","spaceBetween","map","MovieGallery","Pagination","pageCount","currentPage"],"sourceRoot":""}
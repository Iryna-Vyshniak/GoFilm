{"version":3,"file":"static/js/897.7f7e48f3.chunk.js","mappings":"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","sources":["components/Genres/Genres.styled.jsx","components/Genres/Genres.jsx","components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/RatingProgressbar/RatingProgressbar.jsx","modules/ActorsMoviesItem/ActorsMoviesItem.styled.jsx","modules/ActorsMoviesItem/ActorsMoviesItem.jsx","modules/ActorsMovies/ActorsMovies.styled.jsx","modules/ActorsMovies/ActorsMovies.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GenresBlock = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\nexport const Genre = styled.li`\n  background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n  color: rgb(0, 0, 0);\n  text-shadow: 0 0.4px 0.4px #fff;\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-weight: bold;\n  border-radius: 5px;\n  padding: 0 6px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getGenresMovies } from 'services/themoviedbAPI';\nimport { Genre, GenresBlock } from './Genres.styled';\n\nexport const Genres = ({ data, lng }) => {\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  //console.log('Genres:', data);\n\n  // genres\n  useEffect(() => {\n    // const abortController = new AbortController();\n    (async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // const genresData = await getGenresMovies(abortController);\n        // setError(null);\n        const genresData = await getGenresMovies(lng);\n        // console.log(lng);\n        setGenres(genresData);\n      } catch (error) {\n        setError('Something went wrong, reload the page, it might help 🥹');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n    // return () => abortController.abort();\n  }, [lng]);\n\n  return (\n    <>\n      {genres && (\n        <GenresBlock>\n          {genres?.map(genre => {\n            if (data.includes(genre.id)) {\n              return <Genre key={genre.id}>{genre.name}</Genre>;\n            }\n            return null;\n          })}\n        </GenresBlock>\n      )}\n\n      {error && !isLoading && console.log('Oops, mistake... Please try again')}\n    </>\n  );\n};\n\nGenres.propTypes = {\n  data: PropTypes.array.isRequired,\n  lng: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n  margin: 1vh auto;\n`;\n\nexport const Text = styled.p`\n  max-width: 80%;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  text-align: center;\n  \n  font-family: ${props => props.theme.fonts.heading}\n  font-size: ${props => props.theme.fontSizes.s}\n`;\n\nexport const Hero = styled.img`\n  width: 50vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n  margin: 0 auto;\n`;\n\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n  flex: 1 0 auto;\n\n  img {\n    opacity: 0.8;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 45vw;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const BlockHero = styled.div`\n  position: relative;\n  margin-top: -30px;\n  margin-bottom: 30px;\n`;\nexport const HeroContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import HeroImg from 'assets/error.png';\nimport {\n  BlockHero,\n  GradientBlockBottom,\n  GradientBlockTop,\n  Hero,\n  HeroContainer,\n  Text,\n  Wrapper,\n} from './ImageErrorView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return (\n    <Wrapper role=\"alert\">\n      <Text>{message}</Text>\n      <BlockHero>\n        <HeroContainer>\n          <GradientBlockTop></GradientBlockTop>\n          <Hero src={HeroImg} alt=\"Actor\" width=\"240\" />\n          <GradientBlockBottom></GradientBlockBottom>\n        </HeroContainer>\n      </BlockHero>\n    </Wrapper>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport const RatingProgressbar = ({ rating }) => {\n  return (\n    <CircularProgressbar\n      value={rating}\n      maxValue={10}\n      text={rating}\n      background\n      backgroundPadding={6}\n      styles={buildStyles({\n        pathColor: rating < 5 ? 'red' : rating < 7 ? 'orangered' : 'green',\n        height: '100%',\n        width: '100%',\n        textSize: '38px',\n        fontWeight: '700',\n        strokeLinecap: 'butt',\n        transition: 'stroke-dashoffset 0.5s ease 0s',\n        transform: 'rotate(0.25turn)',\n        transformOrigin: 'center center',\n        pathTransitionDuration: 0.5,\n        textColor: 'rgb(255, 0, 0)',\n        trailColor: '#fff',\n        backgroundColor: '#fff',\n      })}\n    />\n  );\n};\n\nRatingProgressbar.propTypes = {\n  rating: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h4`\n  padding-top: ${({ theme }) => theme.space[3]}px;\n  padding-bottom: ${({ theme }) => theme.space[3]}px;\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.s};\n  font-weight: 700;\n`;\n\nexport const CircleRating = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 42px;\n  height: 42px;\n\n  text-shadow: 0 0.3px 0.3px #000;\n  border-radius: 50%;\n  padding: 4px;\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  bottom: 78px;\n  right: 10px;\n`;\n","import { Genres } from 'components/Genres/Genres';\nimport {\n  CardWrapper,\n  MoviePoster,\n  MovieTitle,\n  GenresBlock,\n  CircleRating,\n} from './ActorsMoviesItem.styled';\nimport NoPoster from 'assets/no-poster.jpg';\nimport { Rating } from '@mui/material';\nimport { RatingProgressbar } from 'components/RatingProgressbar/RatingProgressbar';\n\nexport const ActorsMoviesItem = ({\n  movie: { poster_path, title, original_title, vote_average, genre_ids },\n  lng,\n}) => {\n  return (\n    <>\n      <CardWrapper>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width={300}\n          />\n        </MoviePoster>\n        <MovieTitle>{title}</MovieTitle>\n        {vote_average !== 0 && (\n          <>\n            <CircleRating>\n              <RatingProgressbar rating={vote_average?.toFixed(1)} />\n            </CircleRating>\n            <Rating\n              name=\"read-only\"\n              defaultValue={(vote_average / 10) * 5}\n              precision={0.5}\n              size=\"large\"\n              readOnly\n            />\n          </>\n        )}\n        <GenresBlock>\n          <Genres data={genre_ids?.slice(0, 2)} lng={lng} />\n        </GenresBlock>\n      </CardWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ActorMoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 50px;\n`;\n\nexport const MovieListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: ${({ theme }) => theme.space[3]}px;\n\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  background-color: transparent;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    min-height: 100%;\n    height: 420px;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { getMoviesbyActors } from 'services/themoviedbAPI';\nimport { useTranslation } from 'react-i18next';\n\nimport { Loader } from 'components/Loader/Loader';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { ActorsMoviesItem } from 'modules/ActorsMoviesItem/ActorsMoviesItem';\nimport { ActorMoviesList, MovieListItem } from './ActorsMovies.styled';\n\n//  /actors/:id/\nconst ActorsMovies = ({ lng }) => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { t } = useTranslation();\n  // звертаємось до динамічної частини адреси і отрмуємо ключ для подальшого отримання динамічний даних\n  const { personId } = useParams();\n  //console.log(personId);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const dataMovies = await getMoviesbyActors(personId, lng);\n        //console.log(dataMovies);\n\n        setMovies(dataMovies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [personId, lng]);\n\n  if (!movies) {\n    return <div>{t('loading')}</div>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <ImageErrorView message={t('moviesPage.mistake')} />}\n\n      {!error && (\n        <ActorMoviesList>\n          {movies.map(movie => (\n            <MovieListItem key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <ActorsMoviesItem key={movie.id} movie={movie} lng={lng} />\n              </Link>\n            </MovieListItem>\n          ))}\n        </ActorMoviesList>\n      )}\n    </>\n  );\n};\n\nexport default ActorsMovies;\n\n/* \n import {useNavigate} from 'react-router-dom';\nconst navigate = useNavigate();\n  const goBack = () => navigate(-1); // back on 1 page // (1) => move forward  - повертає на 1 сторінку назад, звідки прийшов або далі, примусовий перехід, можна вказати url cвій \n  <button onClick={goBack}></button>;\n  */\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n  // language: 'en' / 'uk',\n};\n\nexport const getPopularMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getTopRatedMovies = async lng => {\n  try {\n    const { data } = await axios.get(`/movie/top_rated`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\n// export const getMoviesByQuery = async (query, page = 1, lng, controller) => {\n//   try {\n//     const { data } = await axios.get('/search/movie', {\n//       signal: controller.signal,\n//       params: {\n//         query,\n//         page,\n//         include_adult: false,\n//         language: lng,\n//       },\n//     });\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie with that name');\n//   }\n// };\n\nexport const getMoviesByQuery = async (page = 1, query = '', lng) => {\n  try {\n    const urlParam = query\n      ? `/search/movie?page=${page}&query=${query}&language=${lng}`\n      : `/movie/upcoming?page=${page}&language=${lng}`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesCast = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\nexport const getVideosMovies = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie`s videos');\n  }\n};\n\nexport const getGenresMovies = async lng => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesWithGenres = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(\n      `/discover/movie?with_genres=${movieId}&sort_by=popularity.desc&page=1&language=${lng}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getGenresMovies = async controller => {\n//   try {\n//     const { data } = await axios.get(`genre/movie/list`, {\n//       signal: controller.signal,\n//     });\n//     return data.genres;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n\nexport const getActorsPopular = async lng => {\n  try {\n    const { data } = await axios.get(`person/popular`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getActorDetailInfo = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`/person/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getActors = async (page = 1, query = '', lng) => {\n  try {\n    const urlParam = query\n      ? `/search/person?page=${page}&query=${query}&language=${lng}`\n      : `/person/popular?page=${page}&language=${lng}`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const getMoviesbyActors = async (personId, lng) => {\n  try {\n    const { data } = await axios.get(`/person/${personId}/movie_credits`, {\n      params: {\n        page: 1,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getLanguages = async () => {\n//   try {\n//     const { data } = await axios.get(`/configuration/primary_translations`);\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n"],"names":["GenresBlock","styled","Genre","props","theme","fontSizes","xs","s","Genres","data","lng","useState","genres","setGenres","isLoading","setIsLoading","error","setError","useEffect","getGenresMovies","genresData","map","genre","includes","id","name","console","log","Wrapper","Text","colors","accent","shadows","textShadow","fonts","heading","Hero","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","BlockHero","HeroContainer","ImageErrorView","message","role","src","HeroImg","alt","width","RatingProgressbar","rating","value","maxValue","text","background","backgroundPadding","styles","buildStyles","pathColor","height","textSize","fontWeight","strokeLinecap","transition","transform","transformOrigin","pathTransitionDuration","textColor","trailColor","backgroundColor","CardWrapper","MoviePoster","MovieTitle","space","cardsTextColor","CircleRating","ActorsMoviesItem","movie","poster_path","title","original_title","vote_average","genre_ids","NoPoster","toFixed","Rating","defaultValue","precision","size","readOnly","slice","ActorMoviesList","MovieListItem","movies","setMovies","t","useTranslation","personId","useParams","location","useLocation","getMoviesbyActors","dataMovies","Loader","to","state","from","axios","api_key","include_adult","getPopularMovies","page","params","language","Error","getTopRatedMovies","getMoviesByQuery","query","urlParam","getMoviesDetailsById","movieId","getMoviesCast","cast","getMoviesReviews","results","getVideosMovies","getMoviesWithGenres","getActorsPopular","getActorDetailInfo","getActors"],"sourceRoot":""}
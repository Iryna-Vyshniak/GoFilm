{"version":3,"file":"static/js/522.668f533d.chunk.js","mappings":"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","sources":["components/Genres/Genres.styled.jsx","components/Genres/Genres.jsx","components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.jsx","components/RatingProgressbar/RatingProgressbar.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GenresBlock = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\nexport const Genre = styled.li`\n  box-shadow: 1px 1px 2px #fff, 1px 1px 2px #fff;\n  background-color: rgba(185, 228, 201, 0.973);\n  color: rgb(0, 0, 0);\n  text-shadow: 0 0.5px 0.5px #fff;\n  font-size: 12px;\n  font-weight: bold;\n  border-radius: 5px;\n  padding: 0 6px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getGenresMovies } from 'services/themoviedbAPI';\nimport { Genre, GenresBlock } from './Genres.styled';\n\nexport const Genres = ({ data, lng }) => {\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  console.log('Genres:', lng);\n\n  // genres\n  useEffect(() => {\n    // const abortController = new AbortController();\n    async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // const genresData = await getGenresMovies(abortController);\n        // setError(null);\n        const genresData = await getGenresMovies(data, lng);\n        setGenres(genresData);\n      } catch (error) {\n        setError('Something went wrong, reload the page, it might help ðŸ¥¹');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getGenres();\n    // return () => abortController.abort();\n  }, [data, lng]);\n\n  return (\n    <>\n      {genres && (\n        <GenresBlock>\n          {genres?.map(genre => {\n            if (data.includes(genre.id)) {\n              return <Genre key={genre.id}>{genre.name}</Genre>;\n            }\n            return null;\n          })}\n        </GenresBlock>\n      )}\n\n      {error && !isLoading && console.log('Oops, mistake... Please try again')}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n  margin: 1vh auto;\n`;\n\nexport const Text = styled.p`\n  max-width: 80%;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  text-align: center;\n  \n  font-family: ${props => props.theme.fonts.heading}\n  font-size: ${props => props.theme.fontSizes.xl}\n`;\n\nexport const Hero = styled.img`\n  width: 50vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n  margin: 0 auto;\n`;\n\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n  flex: 1 0 auto;\n\n  img {\n    opacity: 0.8;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 45vw;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const BlockHero = styled.div`\n  position: relative;\n  margin-top: -30px;\n  margin-bottom: 30px;\n`;\nexport const HeroContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import HeroImg from 'assets/error.png';\nimport {\n  BlockHero,\n  GradientBlockBottom,\n  GradientBlockTop,\n  Hero,\n  HeroContainer,\n  Text,\n  Wrapper,\n} from './ImageErrorView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return (\n    <Wrapper role=\"alert\">\n      <Text>{message}</Text>\n      <BlockHero>\n        <HeroContainer>\n          <GradientBlockTop></GradientBlockTop>\n          <Hero src={HeroImg} alt=\"Actor\" width=\"240\" />\n          <GradientBlockBottom></GradientBlockBottom>\n        </HeroContainer>\n      </BlockHero>\n    </Wrapper>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const LoaderBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(185, 228, 201, 0.7);\n`;\n\nexport const PendingDog = styled.img`\n  position: absolute;\n  top: 35%;\n  left: 45%;\n  margin: 0 auto;\n  width: 15vw;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n`;\n","import React from 'react';\nimport { LoaderBackdrop, PendingDog } from './Loader.styled';\nimport DotLoader from 'react-spinners/DotLoader';\n\nexport const Loader = () => {\n  return (\n    <LoaderBackdrop>\n      <DotLoader\n        color=\"#f68000\"\n        size={150}\n        cssOverride={{ position: 'absolute', top: '25%', left: '45%' }}\n      />\n      <PendingDog src='' alt='' />\n    </LoaderBackdrop>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 20px;\n  place-content: center;\n\n  max-width: calc(100vw - 48px);\n\n  margin: 1vh auto;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n`;\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  margin: 0 auto;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-bottom: ${({ theme }) => theme.space[3]}px;\n\n  max-width: 100%;\n  width: 200px;\n  height: 100%;\n\n  transform: scale(1);\n  border-radius: 8px;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    min-height: 100%;\n    height: 320px;\n    max-width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\n\nexport const ReleaseDate = styled.p`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n\n  background-color: rgba(185, 228, 201, 0.773);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  color: rgba(255, 0, 0, 1);\n  text-shadow: 0 0.4px 0.4px #000;\n\n  border-radius: 8px;\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\n\nexport const CircleRating = styled.div`\n  position: absolute;\n  bottom: 24px;\n  right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 34px;\n  height: 34px;\n\n  text-shadow: 0 0.3px 0.3px #000;\n  border-radius: 50%;\n  padding: 2px;\n`;\nexport const Stars = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding-left: ${({ theme }) => theme.space[1]}px;\n  padding-right: ${({ theme }) => theme.space[1]}px;\n  padding-top: ${({ theme }) => theme.space[0]}px;\n  padding-bottom: ${({ theme }) => theme.space[0]}px;\n  width: 50%;\n  height: 22px;\n  border-radius: 8px;\n  background-color: transparent;\n  backdrop-filter: blur(7.5px);\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  bottom: 34px;\n  left: 10px;\n`;\n","import React from 'react';\nimport {\n  CircleRating,\n  GenresBlock,\n  MovieListItem,\n  MoviePoster,\n  MovieTitle,\n  ReleaseDate,\n  Stars,\n} from './MovieGalleryItem.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Rating } from '@mui/material';\n\nimport { RatingProgressbar } from 'components/RatingProgressbar/RatingProgressbar';\nimport NoPoster from 'assets/no-poster.jpg';\nimport { Genres } from 'components/Genres/Genres';\n\nexport const MovieGalleryItem = ({\n  movie: {\n    id,\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    genre_ids,\n  },\n  state,\n  lng,\n}) => {\n  console.log('MovieGalleryItem:', lng);\n  return (\n    <MovieListItem>\n      <Link to={`/movies/${id}`} state={state}>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width=\"200\"\n          />\n        </MoviePoster>\n        <MovieTitle>{original_title}</MovieTitle>\n        {release_date && <ReleaseDate>{parseInt(release_date)}</ReleaseDate>}\n        {vote_average !== 0 && (\n          <Stars>\n            <Rating\n              style={{\n                position: 'absolute',\n                top: '0',\n                right: '0',\n              }}\n              name=\"read-only\"\n              defaultValue={(vote_average / 10) * 5}\n              precision={0.5}\n              size=\"small\"\n              readOnly\n            />\n          </Stars>\n        )}\n        {vote_average !== 0 && (\n          <CircleRating>\n            <RatingProgressbar rating={vote_average.toFixed(1)} />\n          </CircleRating>\n        )}\n      </Link>\n      <GenresBlock>\n        <Genres lng={lng} data={genre_ids?.slice(0, 1)} />\n      </GenresBlock>\n    </MovieListItem>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n  state: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n","import { MovieListStyled } from './MovieGallery.styled';\nimport { MovieGalleryItem } from 'components/MovieGalleryItem/MovieGalleryItem';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieGallery = ({ movies, lng }) => {\n  console.log('MovieGallery:', lng);\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(movie => (\n        <MovieGalleryItem\n          key={movie.id}\n          movie={movie}\n          state={{ from: location }}\n          lng={lng}\n        />\n      ))}\n    </MovieListStyled>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport const RatingProgressbar = ({ rating }) => {\n  return (\n    <CircularProgressbar\n      value={rating}\n      maxValue={10}\n      text={rating}\n      background\n      backgroundPadding={6}\n      styles={buildStyles({\n        pathColor: rating < 5 ? 'red' : rating < 7 ? 'orangered' : 'green',\n        height: '100%',\n        width: '100%',\n        textSize: '44px',\n        fontWeight: '700',\n        strokeLinecap: 'butt',\n        transition: 'stroke-dashoffset 0.5s ease 0s',\n        transform: 'rotate(0.25turn)',\n        transformOrigin: 'center center',\n        pathTransitionDuration: 0.5,\n        textColor: 'rgb(255, 0, 0)',\n        trailColor: '#fff',\n        backgroundColor: 'rgba(185, 228, 201, 0.773)',\n      })}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 1px 1px #fff, 1px 1px 1px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  // language: 'en' / 'uk',\n};\n\nexport const getPopularMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getTopRatedMovies = async lng => {\n  try {\n    const { data } = await axios.get(`/movie/top_rated`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n        include_adult: false,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const getMoviesCast = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\nexport const getVideosMovies = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie`s videos');\n  }\n};\n\nexport const getGenresMovies = async lng => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMoviesWithGenres = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(\n      `/discover/movie?with_genres=${movieId}&sort_by=popularity.desc&include_adult=false&page=1&language=${lng}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\n// export const getGenresMovies = async controller => {\n//   try {\n//     const { data } = await axios.get(`genre/movie/list`, {\n//       signal: controller.signal,\n//     });\n//     return data.genres;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n\nexport const getActorsPopular = async lng => {\n  try {\n    const { data } = await axios.get(`person/popular`, {\n      params: {\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n// export const getLanguages = async () => {\n//   try {\n//     const { data } = await axios.get(`/configuration/primary_translations`);\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, there is no movie');\n//   }\n// };\n"],"names":["GenresBlock","styled","Genre","Genres","data","lng","useState","genres","setGenres","isLoading","setIsLoading","error","setError","console","log","useEffect","getGenresMovies","genresData","getGenres","map","genre","includes","id","name","Wrapper","Text","props","theme","colors","accent","shadows","textShadow","fonts","heading","fontSizes","xl","Hero","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","BlockHero","HeroContainer","ImageErrorView","message","role","src","HeroImg","alt","width","LoaderBackdrop","PendingDog","Loader","color","size","cssOverride","position","top","left","MovieListStyled","space","MovieListItem","MoviePoster","MovieTitle","cardsTextColor","xs","ReleaseDate","CircleRating","Stars","MovieGalleryItem","movie","poster_path","original_title","release_date","vote_average","genre_ids","state","to","NoPoster","parseInt","Rating","style","right","defaultValue","precision","readOnly","RatingProgressbar","rating","toFixed","slice","MovieGallery","movies","location","useLocation","from","value","maxValue","text","background","backgroundPadding","styles","buildStyles","pathColor","height","textSize","fontWeight","strokeLinecap","transition","transform","transformOrigin","pathTransitionDuration","textColor","trailColor","backgroundColor","MainTitle","m","l","Title","title","axios","api_key","getPopularMovies","page","params","language","Error","getTopRatedMovies","getMoviesByQuery","query","include_adult","getMoviesDetailsById","movieId","getMoviesCast","cast","getMoviesReviews","results","getVideosMovies","getMoviesWithGenres","getActorsPopular"],"sourceRoot":""}
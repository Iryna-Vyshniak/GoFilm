{"version":3,"file":"static/js/636.58cf2c17.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","modules/MovieGallery/MovieGallery.styled.jsx","modules/MovieGalleryItem/MovieGalleryItem.styled.jsx","modules/MovieGalleryItem/MovieGalleryItem.jsx","modules/MovieGallery/MovieGallery.jsx","pages/MoviesPage/MoviesPage.styled.jsx","components/GenresSelect/GenresSelect.jsx","components/MoviesBanner/MoviesBanner.styled.jsx","components/MoviesBanner/MoviesBanner.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const Paginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin: 30px 0;\n  font-size: 14px;\n\n  .selected {\n    border: 1px solid #ffffff;\n    border-radius: 50%;\n    background: #ecf0f3;\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n    text-shadow: 0.0625rem 0.0625rem 0.0625rem #fff;\n    color: ${props => props.theme.colors.accent};\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding: 2px;\n\n    width: 34px;\n    height: 34px;\n    border-radius: 50%;\n    text-align: center;\n\n    border: none;\n    outline: none;\n\n    box-shadow: ${({ theme }) => theme.buttonShadow};\n\n    text-shadow: 0 1px 1px #fff;\n    background-color: transparent;\n\n    cursor: pointer;\n\n    &:hover {\n      background: #ecf0f3;\n      box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n      color: ${props => props.theme.colors.accent};\n    }\n  }\n`;\n","import { Paginate } from './Pagination.styled';\nimport PropTypes from 'prop-types';\n//import ReactPaginate from 'react-paginate';\n\nconst Pagination = ({ pageCount, setSearchParams, params, currentPage }) => {\n  //console.log(pages);\n  const handlePageClick = e => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <Paginate\n      initialPage={currentPage}\n      nextLabel=\"»\"\n      onPageChange={handlePageClick}\n      pageCount={pageCount}\n      breakLabel=\"...\"\n      previousLabel=\"«\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={1}\n      renderOnZeroPageCount={null}\n      onPageActive={window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      })}\n    />\n  );\n};\n\nexport default Pagination;\n\nPagination.propTypes = {\n  pageCount: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\nimport DebounceInput from 'react-debounce-input';\nimport { HiMagnifyingGlass } from 'react-icons/hi2';\n\nexport const SearchForm = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 30px;\n\n  width: 100%;\n\n  max-width: 20.4rem;\n  height: 2.2rem;\n\n  backdrop-filter: blur(2px);\n  color: #fff;\n  outline: 0;\n  border: 0;\n  border-radius: 30px;\n\n  box-shadow: 1px 1px 1px #f84119, 1px 1px 1px #fff;\n\n  overflow: hidden;\n`;\n\nexport const Icon = styled(HiMagnifyingGlass)`\n  position: absolute;\n  right: -5px;\n  margin-right: 10px;\n  width: 20px;\n  height: 20px;\n\n  fill: ${props => props.theme.colors.accent};\n  stroke: ${props => props.theme.colors.white};\n  stroke-width: 1px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 34px;\n  height: 34px;\n  border: 0;\n  border-radius: 50%;\n\n  background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    fill: ${props => props.theme.colors.accent};\n    stroke: ${props => props.theme.colors.white};\n    stroke-width: 1px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n      transform: scale(1.2);\n    }\n  }\n`;\n\nexport const SearchFormInput = styled(DebounceInput)`\n  display: inline-block;\n  width: 100%;\n  min-height: 34px;\n\n  border-radius: 0.1rem;\n\n  font: inherit;\n\n  font-size: 1.2rem;\n\n  border: none;\n  outline: none;\n\n  padding-left: ${props => props.theme.space[5]}px;\n  padding-right: ${props => props.theme.space[3]}px;\n\n  background: none;\n\n  color: ${props => props.theme.colors.accent};\n  letter-spacing: 1.4px;\n\n  :focus {\n    outline: none;\n  }\n\n  ::placeholder {\n    text-align: center;\n    color: #fd5523;\n    font-size: 20px;\n    font-family: ${props => props.theme.fonts.heading};\n    letter-spacing: 1.3px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport {\n  Icon,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ value, onChange }) => {\n  const { t } = useTranslation();\n  return (\n    <SearchForm>\n      <SearchFormInput\n        type=\"text\"\n        value={value}\n        debounceTimeout={500}\n        onChange={onChange}\n        placeholder={t('moviesPage.placeholder_search')}\n      />\n      <SearchFormBtn type=\"submit\">\n        <Icon size=\"24\" />\n      </SearchFormBtn>\n    </SearchForm>\n  );\n};\n\nSearchbar.propType = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  t: PropTypes.any.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  color: ${({ theme }) => theme.text};\n  text-shadow: 0 0.4px 0.4px #fff, 0 0.5px 0.5px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  text-align: center;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 20px;\n  place-content: center;\n\n  max-width: calc(100vw - 48px);\n\n  margin: 1vh auto;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n`;\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  margin: 0 auto;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: ${({ theme }) => theme.space[3]}px;\n\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  background-color: transparent;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    min-height: 100%;\n    height: 420px;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-top: ${({ theme }) => theme.space[3]}px;\n  padding-bottom: ${({ theme }) => theme.space[3]}px;\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.s};\n  font-weight: 700;\n`;\n\nexport const ReleaseDate = styled.p`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n\n  padding-left: ${({ theme }) => theme.space[2]}px;\n  padding-right: ${({ theme }) => theme.space[2]}px;\n\n  background-color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  color: rgba(255, 66, 8, 1);\n  text-shadow: 0 0.4px 0.4px #000;\n\n  border-radius: 8px;\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\n\nexport const CircleRating = styled.div`\n  position: absolute;\n  bottom: 38px;\n  right: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 42px;\n  height: 42px;\n\n  text-shadow: 0 0.3px 0.3px #000;\n  border-radius: 50%;\n  padding: 2px;\n`;\nexport const Stars = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding-left: ${({ theme }) => theme.space[1]}px;\n  padding-right: ${({ theme }) => theme.space[1]}px;\n  padding-top: ${({ theme }) => theme.space[0]}px;\n  padding-bottom: ${({ theme }) => theme.space[0]}px;\n  width: 50%;\n  height: 22px;\n  border-radius: 8px;\n  background-color: transparent;\n  backdrop-filter: blur(7.5px);\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  bottom: 48px;\n  left: 10px;\n`;\n","import React from 'react';\nimport {\n  CircleRating,\n  GenresBlock,\n  MovieListItem,\n  MoviePoster,\n  MovieTitle,\n  ReleaseDate,\n  Stars,\n} from './MovieGalleryItem.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Rating } from '@mui/material';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport { RatingProgressbar } from 'components/RatingProgressbar/RatingProgressbar';\nimport NoPoster from 'assets/no-poster.jpg';\nimport { Genres } from 'components/Genres/Genres';\n\nexport const MovieGalleryItem = ({\n  movie: {\n    id,\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    genre_ids,\n  },\n  state,\n}) => {\n  return (\n    <MovieListItem>\n      <Link to={`/movies/${id}`} state={state}>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width=\"200\"\n          />\n        </MoviePoster>\n        <Tooltip\n          title=\"Click for watch more\"\n          describeChild\n          PopperProps={{\n            sx: {\n              '& .MuiTooltip-tooltip': {\n                bgcolor: '#B9E4C9',\n                color: '#000',\n                width: '250px',\n                textAlign: 'center',\n              },\n            },\n          }}\n        >\n          <MovieTitle>{title}</MovieTitle>\n        </Tooltip>\n\n        {release_date && <ReleaseDate>{parseInt(release_date)}</ReleaseDate>}\n        {vote_average !== 0 && (\n          <Stars>\n            <Rating\n              style={{\n                position: 'absolute',\n                top: '0',\n                right: '0',\n              }}\n              name=\"read-only\"\n              defaultValue={(vote_average / 10) * 5}\n              precision={0.5}\n              size=\"small\"\n              readOnly\n            />\n          </Stars>\n        )}\n        {vote_average !== 0 && (\n          <CircleRating>\n            <RatingProgressbar rating={vote_average.toFixed(1)} />\n          </CircleRating>\n        )}\n      </Link>\n      <GenresBlock>\n        <Genres data={genre_ids?.slice(0, 1)} />\n      </GenresBlock>\n    </MovieListItem>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n  state: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MovieListStyled } from './MovieGallery.styled';\nimport { MovieGalleryItem } from 'modules/MovieGalleryItem/MovieGalleryItem';\n\nexport const MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(movie => (\n        <MovieGalleryItem\n          key={movie.id}\n          movie={movie}\n          state={{ from: location }}\n        />\n      ))}\n    </MovieListStyled>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const MoviesBlock = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  padding-bottom: ${({ theme }) => theme.space[5]}px;\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  padding-right: ${({ theme }) => theme.space[4]}px;\n  margin-bottom: 64px;\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n\n  border: none;\n  border-radius: ${props => props.theme.radii.normal};\n\n  font-size: ${props => props.theme.fontSizes.m};\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  background-color: ${props => props.theme.colors.secondary};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(0.8);\n  }\n`;\n\nexport const AvatarWrap = styled.div`\n  display: inline-block;\n  margin-bottom: 15px;\n\n  width: 125px;\n  height: 125px;\n  border-radius: 50%;\n\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center top;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\n//--------------------------------------------------\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n    opacity: 0.5;\n  }\n`;\nexport const BgBlockActors = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    opacity: 0.5;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const BackdropActors = styled.div`\n  padding-top: 84px;\n  padding-bottom: 84px;\n  width: 100%;\n  height: 100px;\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const SectionHero = styled.section`\n  position: relative;\n\n  margin-top: -50px;\n  margin-bottom: 30px;\n\n  padding-top: 84px;\n  padding-bottom: 84px;\n`;\n\nexport const SectionActors = styled.section`\n  position: relative;\n\n  margin-bottom: -180px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const BlockInfoActors = styled.div`\n  position: relative;\n  z-index: 50;\n  margin-bottom: -110px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const HeroContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin: 0 auto;\n  padding: 0;\n\n  width: 100%;\n  height: 750px;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ActorName = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\nexport const Known = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n  opacity: 0.5;\n`;\n\nexport const TitleList = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n\n  width: 100%;\n  height: 4rem;\n\n  backdrop-filter: blur(0.7125rem);\n\n  text-align: center;\n  color: ${({ theme }) => theme.text};\n\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n\nexport const SmallText = styled.p`\n  position: relative;\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.s};\n  font-style: italic;\n  opacity: 0.5;\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 550px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n","import ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { getGenresMovies } from 'services/themoviedbAPI';\nimport { useTranslation } from 'react-i18next';\n\nconst animatedComponents = makeAnimated();\n\nexport const GenresSelect = ({ onSelect, t }) => {\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n\n  const customStyles = {\n    option: (defaultStyles, state) => ({\n      ...defaultStyles,\n      fontSize: '14px',\n      color: state.isSelected ? '#212529' : '#fd5523',\n      background: state.isSelected\n        ? 'linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%)'\n        : '#FFFBE6',\n    }),\n\n    control: defaultStyles => ({\n      ...defaultStyles,\n      background: 'linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%)',\n      border: 'none',\n      boxShadow: 'none',\n    }),\n    singleValue: defaultStyles => ({\n      ...defaultStyles,\n      color: '#FFF',\n      background: 'linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%)',\n      borderRadius: '30px',\n      maxWidth: '45%',\n      padding: '5px 10px',\n      marginLeft: '30px',\n    }),\n  };\n\n  // genres\n  useEffect(() => {\n    // const abortController = new AbortController();\n    async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // const genresData = await getGenresMovies(abortController);\n        // setError(null);\n        const genresData = await getGenresMovies(lng);\n        //console.log(genresData);\n        setGenres(genresData);\n      } catch (error) {\n        setError(`{t('moviesPage.set_error')}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getGenres();\n    // return () => abortController.abort();\n  }, [lng]);\n\n  const options = genres?.map(genre => ({\n    value: genre.id,\n    label: genre.name,\n  }));\n\n  return (\n    <>\n      <Select\n        options={options}\n        isLoading={isLoading}\n        onChange={option => (!option ? '' : onSelect(option.value))}\n        placeholder={t('moviesPage.placeholder_genres')}\n        components={animatedComponents}\n        isClearable={true}\n        styles={customStyles}\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n      />\n      {error && !isLoading && (\n        <ImageErrorView message={t('moviesPage.mistake')} />\n      )}\n    </>\n  );\n};\n\nGenresSelect.propTypes = {\n  t: PropTypes.any.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink as MovieLink } from 'react-router-dom';\n\nexport const BackdropContainer = styled.section`\n  position: relative;\n\n  margin: 0 auto;\n  margin-top: -80px;\n  padding: 0;\n\n  width: 100%;\n  height: 550px;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  background-image: ;\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const BackdropPoster = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  flex: 1 0 auto;\n  background-color: rgba(0, 0, 0, 1);\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top center;\n  }\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 450px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const ItemMovies = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n  width: 100%;\n  height: 550px;\n  overflow: hidden;\n  background: color: ${({ theme }) => theme.body};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n     gap: 10px;\n    flex-direction: row;\n  }\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 25;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n\n  padding: 8px;\n  width: 100%;\n  backdrop-filter: blur(10.5px);\n  border-radius: 8px;\n  border: none: outline: none;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n    width: 35%;\n  }\n`;\n\nexport const Reviews = styled.p`\n  color: ${({ theme }) => theme.text};\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: 1.5px;\n\n  @media screen and (min-width: 480px) {\n    font-size: 14px;\n  }\n`;\n\nexport const NavLink = styled(MovieLink)`\n  position: relative;\n  z-index: 9;\n  padding: 8px 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 128px;\n  height: 40px;\n  border-radius: 74px;\n\n  text-decoration: none;\n  color: ${({ theme }) => theme.text};\n  text-shadow: 0 0.4px 0.4px #fff, inset 40px 40px 40px #fff;\n  font-size: 12px;\n  font-weight: 500;\n  background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n\n  &.active {\n    color: #fff;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${({ theme }) => theme.text};\n  }\n\n  @media screen and (min-width: 480px) {\n    font-size: 14px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Rating } from '@mui/material';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Title } from 'components/Title/Title';\nimport {\n  BackdropContainer,\n  BackdropPoster,\n  Content,\n  GradientBlockBottom,\n  GradientBlockTop,\n  ItemMovies,\n  NavLink,\n  Reviews,\n} from './MoviesBanner.styled';\nimport { useEffect, useState } from 'react';\nimport { getNowPlayingMovies } from 'services/themoviedbAPI';\nimport { useTranslation } from 'react-i18next';\nimport { Loader } from 'components/Loader/Loader';\nimport Error from 'assets/error.png';\n\nfunction SampleNextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'none' }}\n      onClick={onClick}\n    />\n  );\n}\n\nfunction SamplePrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'none' }}\n      onClick={onClick}\n    />\n  );\n}\n\nconst settings = {\n  dots: false,\n  fade: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  initialSlide: 1,\n  adaptiveHeight: true,\n  nextArrow: <SampleNextArrow />,\n  prevArrow: <SamplePrevArrow />,\n};\n\nexport const MoviesBanner = () => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const data = await getNowPlayingMovies(lng);\n        //console.log(data);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [lng, location.search]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <img src={Error} alt=\"default pic for error\" width=\"1200\" />}\n      {!error && movies.length > 0 && (\n        <Slider {...settings}>\n          {movies.map(\n            ({ id, poster_path, title, vote_average, overview }, idx) => (\n              <BackdropContainer\n                key={`${id}-${idx}`}\n                className=\"styles.swiperslide\"\n              >\n                <GradientBlockTop></GradientBlockTop>\n                {`https://image.tmdb.org/t/p/original${poster_path}` && (\n                  <BackdropPoster>\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/original${poster_path}`\n                          : Error\n                      }\n                      alt={title}\n                      width=\"1200\"\n                    />\n                  </BackdropPoster>\n                )}\n                <GradientBlockBottom></GradientBlockBottom>\n                <ItemMovies>\n                  <Content>\n                    <Title title={title} />\n                    {(vote_average || vote_average > 0) && (\n                      <Rating\n                        name=\"read-only\"\n                        defaultValue={(vote_average / 10) * 5}\n                        precision={0.5}\n                        size=\"large\"\n                        readOnly\n                      />\n                    )}\n                    {overview?.length > 250 ? (\n                      <Reviews>{overview.slice(0, 250)}...</Reviews>\n                    ) : (\n                      <Reviews>{overview}</Reviews>\n                    )}\n\n                    <NavLink to={`/movies/${id}`} state={location.state}>\n                      WATCH MORE\n                    </NavLink>\n                  </Content>\n                </ItemMovies>\n              </BackdropContainer>\n            )\n          )}\n        </Slider>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n// CAROUSEL SWIPER IMPORT\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/autoplay';\nimport 'swiper/css/scrollbar';\nimport { Autoplay, Scrollbar } from 'swiper';\n\nimport Grid2 from '@mui/material/Unstable_Grid2';\n\nimport {\n  ActorName,\n  AvatarWrap,\n  BackdropActors,\n  //BackdropImg,\n  BgBlockActors,\n  BlockInfoActors,\n  GradientBlockBottom,\n  GradientBlockTop,\n  Known,\n  MoviesBlock,\n  Poster,\n  SectionActors,\n  SectionHero,\n  SmallText,\n  TitleList,\n} from './MoviesPage.styled';\n\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport {\n  getActorsPopular,\n  getMoviesByQuery,\n  getMoviesWithGenres,\n} from 'services/themoviedbAPI';\nimport { MovieGallery } from 'modules/MovieGallery/MovieGallery';\n\nimport { Loader } from 'components/Loader/Loader';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport NoPoster from 'assets/no-poster.jpg';\nimport ActorsBg from 'assets/actors-bg.png';\nimport { GenresSelect } from 'components/GenresSelect/GenresSelect';\nimport { Title } from 'components/Title/Title';\nimport Pagination from 'components/Pagination/Pagination';\nimport { MoviesBanner } from 'components/MoviesBanner/MoviesBanner';\n\nconst MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n\n  const [data, setData] = useState(null);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: 1,\n    query: '',\n  });\n\n  const { i18n } = useTranslation();\n  const lng = i18n.language;\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const page = Number(params.page || 1);\n  let { query } = params;\n\n  //console.log(params);\n\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  // movies\n  useEffect(() => {\n    (async () => {\n      try {\n        setData(null);\n        const data = await getMoviesByQuery(page, query, lng);\n        //console.log(data.results);\n\n        setMovies(data.results);\n        setTotalPages(data.total_results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n    // return () => {\n    //   controller.abort();\n    // };\n  }, [page, query, location.search, lng]);\n\n  useEffect(() => {\n    const filtered = movies?.filter(movie =>\n      movie?.title?.toLowerCase().includes(query?.toLowerCase())\n    );\n    setFilteredMovies(filtered);\n  }, [movies, query]);\n\n  // actors\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const dataActors = await getActorsPopular(lng);\n        //console.log(data);\n        setActors(dataActors);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [lng]);\n\n  // get movies by genres\n  useEffect(() => {\n    if (!selectedGenre) return;\n\n    const fetchMovies = async (movieId, lng) => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setMovies([]);\n        const moviesData = await getMoviesWithGenres(movieId, lng);\n        setData(moviesData.results);\n      } catch (error) {\n        setData(null);\n        setError(<ImageErrorView message={t('moviesPage.mistake')} />);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies(selectedGenre, lng);\n  }, [lng, selectedGenre, t]);\n\n  if (!actors) {\n    return <div>{t('loading')}</div>;\n  }\n\n  const handleSearchChange = e => {\n    const inputValue = e.target.value;\n    query = inputValue;\n    setSearchParams({ page: 1, query: query });\n\n    // clear selected genre when input is changed\n    if (selectedGenre) {\n      setSelectedGenre(null);\n    }\n  };\n\n  // console.log(movies);\n  return (\n    <>\n      <MoviesBlock>\n        <SectionHero>\n          <GradientBlockTop></GradientBlockTop>\n          <MoviesBanner />\n        </SectionHero>\n        {/* ПОШУК ФІЛЬМІВ */}\n        <Searchbar value={query} onChange={handleSearchChange} t={t} />\n        <GenresSelect onSelect={setSelectedGenre} t={t} lng={lng} />\n\n        {isLoading && <Loader />}\n        {/*  якщо запит відбувся з помилкою - рендериться дефолтне зображення з повідомленням помилки */}\n        {error && <ImageErrorView message={t('moviesPage.mistake')} />}\n\n        {/* якщо при запиті зображення не знайдені - рендериться дефолтне зображення з повідомленням */}\n        {totalPages === 0 && data === null && (\n          <ImageErrorView message={t('moviesPage.not_found')} />\n        )}\n\n        {!error && !isLoading && !query && selectedGenre === null && (\n          <>\n            <Title title={t('actorsPage.expected')} />\n            <MovieGallery movies={movies} lng={lng} />\n          </>\n        )}\n\n        {!error && query && !isLoading && (\n          <MovieGallery movies={filteredMovies} lng={lng} />\n        )}\n\n        {movies.length > 0 && !isLoading && page <= totalPages && (\n          <Pagination\n            pageCount={totalPages}\n            setSearchParams={setSearchParams}\n            params={params}\n            currentPage={page - 1}\n          />\n        )}\n\n        {/* рендер галереї зображень за жанрами*/}\n        {!error && !isLoading && data && (\n          <>\n            <Title title={t('moviesPage.trend_list')} />\n            <MovieGallery movies={data} lng={lng} />\n          </>\n        )}\n\n        {/* якщо запит успішний  - рендериться галерея зображень акторів*/}\n        {actors && (\n          <>\n            <BlockInfoActors>\n              <TitleList>{t('moviesPage.persons_list')}</TitleList>\n\n              <SmallText>\n                <small>{t('moviesPage.description_persons_list')}</small>\n              </SmallText>\n            </BlockInfoActors>\n\n            <SectionActors>\n              <BackdropActors>\n                <GradientBlockTop></GradientBlockTop>\n\n                <BgBlockActors>\n                  <img src={ActorsBg} alt=\"poster opacity\" width=\"1200\" />\n                </BgBlockActors>\n\n                <GradientBlockBottom></GradientBlockBottom>\n              </BackdropActors>\n            </SectionActors>\n            <Grid2\n              container\n              spacing={1}\n              rowSpacing={1}\n              component=\"section\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid2 container spacing={1}>\n                <Swiper\n                  centeredSlides={true}\n                  spaceBetween={30}\n                  scrollbar={{\n                    hide: true,\n                  }}\n                  modules={[Autoplay, Scrollbar]}\n                  className=\"mySwiper\"\n                  loop={true}\n                  autoplay={{\n                    delay: 2000,\n                    disableOnInteraction: false,\n                  }}\n                  breakpoints={{\n                    // when window width is >= 320px\n                    320: {\n                      slidesPerView: 2,\n                      spaceBetween: 0,\n                    },\n                    // when window width is >= 640px\n                    640: {\n                      slidesPerView: 6,\n                      spaceBetween: 20,\n                    },\n                    // when window width is >= 1040px\n                    1040: {\n                      slidesPerView: 8,\n                      spaceBetween: 50,\n                    },\n                  }}\n                >\n                  {actors.map(({ id, profile_path, name, known_for }) => {\n                    return (\n                      <SwiperSlide key={id}>\n                        <Link\n                          to={`/actors/${id}`}\n                          state={{ from: location }}\n                          key={id}\n                        >\n                          <AvatarWrap>\n                            <Poster\n                              src={\n                                profile_path\n                                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                                  : `https://image.tmdb.org/t/p/w300${NoPoster}`\n                              }\n                              alt={name}\n                            />\n                          </AvatarWrap>\n\n                          <ActorName>{name}</ActorName>\n                          {known_for[0] && (\n                            <>\n                              <Known>{known_for[0].title}</Known>\n                            </>\n                          )}\n                        </Link>\n                      </SwiperSlide>\n                    );\n                  })}\n                </Swiper>\n              </Grid2>\n            </Grid2>\n          </>\n        )}\n      </MoviesBlock>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Paginate","styled","ReactPaginate","props","theme","colors","accent","buttonShadow","pageCount","setSearchParams","params","currentPage","initialPage","nextLabel","onPageChange","e","page","selected","breakLabel","previousLabel","pageRangeDisplayed","marginPagesDisplayed","renderOnZeroPageCount","onPageActive","window","scrollTo","top","behavior","SearchForm","Icon","HiMagnifyingGlass","white","SearchFormBtn","SearchFormInput","DebounceInput","space","fonts","heading","Searchbar","value","onChange","t","useTranslation","type","debounceTimeout","placeholder","size","propType","PropTypes","MainTitle","text","fontSizes","m","l","Title","title","MovieListStyled","MovieListItem","MoviePoster","MovieTitle","cardsTextColor","textShadow","s","ReleaseDate","xs","CircleRating","Stars","GenresBlock","MovieGalleryItem","movie","id","poster_path","original_title","release_date","vote_average","genre_ids","state","to","src","NoPoster","alt","width","Tooltip","describeChild","PopperProps","sx","bgcolor","color","textAlign","parseInt","Rating","style","position","right","name","defaultValue","precision","readOnly","RatingProgressbar","rating","toFixed","Genres","data","slice","MovieGallery","movies","location","useLocation","map","from","MoviesBlock","xl","AvatarWrap","radii","normal","shadows","secondary","Poster","BgBlockActors","BackdropActors","GradientBlockTop","gradientBlock","SectionHero","SectionActors","BlockInfoActors","ActorName","Known","TitleList","SmallText","GradientBlockBottom","gradientHeroBanner","animatedComponents","makeAnimated","GenresSelect","onSelect","useState","genres","setGenres","isLoading","setIsLoading","error","setError","lng","i18n","language","customStyles","option","defaultStyles","fontSize","isSelected","background","control","border","boxShadow","singleValue","borderRadius","maxWidth","padding","marginLeft","useEffect","getGenresMovies","genresData","getGenres","options","genre","label","components","isClearable","styles","className","classNamePrefix","ImageErrorView","message","BackdropContainer","BackdropPoster","ItemMovies","body","Content","Reviews","NavLink","MovieLink","SampleNextArrow","onClick","display","SamplePrevArrow","settings","dots","fade","infinite","speed","slidesToShow","slidesToScroll","initialSlide","adaptiveHeight","nextArrow","prevArrow","MoviesBanner","setMovies","getNowPlayingMovies","results","console","log","search","Loader","Error","length","idx","overview","filteredMovies","setFilteredMovies","actors","setActors","totalPages","setTotalPages","setData","selectedGenre","setSelectedGenre","useSearchParams","query","searchParams","useMemo","Object","fromEntries","Number","getMoviesByQuery","total_results","filtered","filter","toLowerCase","includes","getActorsPopular","dataActors","fetchMovies","movieId","getMoviesWithGenres","moviesData","inputValue","target","Pagination","ActorsBg","Grid2","container","spacing","rowSpacing","component","justifyContent","alignItems","centeredSlides","spaceBetween","scrollbar","hide","modules","Autoplay","Scrollbar","loop","autoplay","delay","disableOnInteraction","breakpoints","slidesPerView","profile_path","known_for"],"sourceRoot":""}
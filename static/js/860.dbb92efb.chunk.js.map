{"version":3,"file":"static/js/860.dbb92efb.chunk.js","mappings":"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","sources":["pages/MoviesPage/MoviesPage.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/GenresSelect/GenresSelect.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesBlock = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding-top: ${({ theme }) => theme.space[5]}px;\n  padding-bottom: ${({ theme }) => theme.space[5]}px;\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  padding-right: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  padding-right: ${props => props.theme.space[4]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[3]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n\n  border: none;\n  border-radius: ${props => props.theme.radii.normal};\n\n  font-size: ${props => props.theme.fontSizes.m};\n  color: ${props => props.theme.colors.accent};\n  text-shadow: ${props => props.theme.shadows.textShadow};\n\n  background-color: ${props => props.theme.colors.secondary};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(0.8);\n  }\n`;\n\nexport const AvatarWrap = styled.div`\n  display: inline-block;\n  margin-bottom: 15px;\n\n  width: 125px;\n  height: 125px;\n  border-radius: 50%;\n\n  overflow: hidden;\n`;\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center top;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\n//--------------------------------------------------\nexport const BackdropImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n    opacity: 0.5;\n  }\n`;\nexport const BgBlockActors = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  flex: 1 1 auto;\n\n  img {\n    opacity: 0.5;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const BackdropActors = styled.div`\n  padding-top: 84px;\n  padding-bottom: 84px;\n  width: 100%;\n  height: 100px;\n`;\n\nexport const GradientBlockTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  background: ${({ theme }) => theme.gradientBlock};\n`;\n\nexport const GradientBlockBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 450px;\n\n  background: ${({ theme }) => theme.gradientHeroBanner};\n`;\n\nexport const SectionHero = styled.section`\n  position: relative;\n\n  margin-top: -50px;\n  margin-bottom: 30px;\n\n  padding-top: 84px;\n  padding-bottom: 84px;\n\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nexport const SectionActors = styled.section`\n  position: relative;\n\n  margin-bottom: -180px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const BlockInfoActors = styled.div`\n  position: relative;\n  z-index: 50;\n  margin-bottom: -110px;\n  margin-top: 30px;\n\n  padding-top: 84px;\n`;\nexport const HeroContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin: 0 auto;\n  padding: 0;\n\n  width: 100%;\n  height: 450px;\n\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ActorName = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n`;\nexport const Known = styled.p`\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n  opacity: 0.5;\n`;\n\nexport const TitleList = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n\n  width: 100%;\n  height: 4rem;\n\n  backdrop-filter: blur(0.7125rem);\n\n  text-align: center;\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 1px 1px #fff, 1px 1px 1px #4b1414;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: 700;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n`;\n\nexport const SmallText = styled.p`\n  position: relative;\n  color: ${({ theme }) => theme.cardsTextColor};\n  text-shadow: ${({ theme }) => theme.textShadow};\n  text-align: center;\n\n  font-size: ${props => props.theme.fontSizes.s};\n  font-style: italic;\n  opacity: 0.5;\n`;\n","// import styled from 'styled-components';\n// import { HiMagnifyingGlass } from 'react-icons/hi2';\n\n// export const SearchForm = styled.form`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   margin: 0 auto;\n//   margin-top: -70px;\n\n//   width: 100%;\n\n//   max-width: 20.4rem;\n//   height: 2.2rem;\n\n//   backdrop-filter: blur(2px);\n//   color: #fff;\n//   outline: 0;\n//   border: 0;\n//   border-radius: 30px;\n\n//   box-shadow: 1px 1px 1px #f3d8a0, 1px 1px 1px #fff;\n\n//   overflow: hidden;\n// `;\n\n// export const Icon = styled(HiMagnifyingGlass)`\n//   position: absolute;\n//   right: -5px;\n//   margin-right: 10px;\n//   width: 20px;\n//   height: 20px;\n\n//   fill: ${props => props.theme.colors.accent};\n//   stroke: ${props => props.theme.colors.white};\n//   stroke-width: 1px;\n//   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//   :hover {\n//     transform: scale(1.2);\n//   }\n// `;\n\n// export const SearchFormBtn = styled.button`\n//   display: inline-flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 34px;\n//   height: 34px;\n//   border: 0;\n//   border-radius: 30px 0 0 30px;\n\n//   opacity: 0.6;\n//   background-color: rgba(185, 228, 201, 1);\n//   transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   cursor: pointer;\n//   outline: none;\n\n//   :hover {\n//     opacity: 1;\n//   }\n\n//   svg {\n//     fill: ${props => props.theme.colors.accent};\n//     stroke: ${props => props.theme.colors.white};\n//     stroke-width: 1px;\n//     transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//     :hover {\n//       transform: scale(1.2);\n//     }\n//   }\n// `;\n\n// export const SearchFormInput = styled.input`\n//   display: inline-block;\n//   width: 100%;\n//   min-height: 34px;\n\n//   border-radius: 0.1rem;\n\n//   font: inherit;\n\n//   font-size: 1.2rem;\n\n//   border: none;\n//   outline: none;\n\n//   padding-left: ${props => props.theme.space[5]}px;\n//   padding-right: ${props => props.theme.space[3]}px;\n\n//   background: none;\n\n//   color: ${props => props.theme.colors.accent};\n//   text-shadow: 0 0.4px 0.4px #fff;\n//   letter-spacing: 1.4px;\n\n//   ::placeholder {\n//     text-align: center;\n//     color: #37966f;\n//     font-size: 20px;\n//     font-family: ${props => props.theme.fonts.heading};\n//     text-shadow: 0 0.4px 0.4px #000;\n//     letter-spacing: 1.3px;\n//   }\n// `;\n\nimport styled from 'styled-components';\nimport DebounceInput from 'react-debounce-input';\nimport { HiMagnifyingGlass } from 'react-icons/hi2';\n\nexport const SearchForm = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 30px;\n\n  width: 100%;\n\n  max-width: 20.4rem;\n  height: 2.2rem;\n\n  backdrop-filter: blur(2px);\n  color: #fff;\n  outline: 0;\n  border: 0;\n  border-radius: 30px;\n\n  box-shadow: 1px 1px 1px #f3d8a0, 1px 1px 1px #fff;\n\n  overflow: hidden;\n`;\n\nexport const Icon = styled(HiMagnifyingGlass)`\n  position: absolute;\n  right: -5px;\n  margin-right: 10px;\n  width: 20px;\n  height: 20px;\n\n  fill: ${props => props.theme.colors.accent};\n  stroke: ${props => props.theme.colors.white};\n  stroke-width: 1px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 34px;\n  height: 34px;\n  border: 0;\n  border-radius: 30px 0 0 30px;\n\n  opacity: 0.6;\n  background-color: rgba(185, 228, 201, 1);\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    fill: ${props => props.theme.colors.accent};\n    stroke: ${props => props.theme.colors.white};\n    stroke-width: 1px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n      transform: scale(1.2);\n    }\n  }\n`;\n\nexport const SearchFormInput = styled(DebounceInput)`\n  display: inline-block;\n  width: 100%;\n  min-height: 34px;\n\n  border-radius: 0.1rem;\n\n  font: inherit;\n\n  font-size: 1.2rem;\n\n  border: none;\n  outline: none;\n\n  padding-left: ${props => props.theme.space[5]}px;\n  padding-right: ${props => props.theme.space[3]}px;\n\n  background: none;\n\n  color: ${props => props.theme.colors.accent};\n  text-shadow: 0 0.4px 0.4px #fff;\n  letter-spacing: 1.4px;\n\n  :focus {\n    outline: none;\n  }\n\n  ::placeholder {\n    text-align: center;\n    color: #37966f;\n    font-size: 20px;\n    font-family: ${props => props.theme.fonts.heading};\n    text-shadow: 0 0.4px 0.4px #000;\n    letter-spacing: 1.3px;\n  }\n`;\n","//import React, { useState } from 'react';\n// import {\n//   Icon,\n//   SearchForm,\n//   SearchFormBtn,\n//   SearchFormInput,\n// } from './Searchbar.styled';\n// import { toast } from 'react-toastify';\n// import { notifyOptions } from 'utils/notify';\n// import PropTypes from 'prop-types';\n\n// export const Searchbar = ({ onSubmit, t }) => {\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const { query } = e.target.elements;\n//     if (query.value.trim() === '') {\n//       return toast.info('Please enter key words for search', notifyOptions);\n//     }\n//     onSubmit(query.value);\n//     e.target.reset();\n//   };\n\n//   return (\n//     <SearchForm onSubmit={handleSubmit}>\n//       <SearchFormInput\n//         type=\"text\"\n//         autoFocus\n//         placeholder={t('moviesPage.placeholder_search')}\n//         name=\"query\"\n//       />\n//       <SearchFormBtn type=\"submit\">\n//         <Icon size=\"24\" />\n//       </SearchFormBtn>\n//     </SearchForm>\n//   );\n// };\n\n// Searchbar.propType = {\n//   onSubmit: PropTypes.func.isRequired,\n//   t: PropTypes.any.isRequired,\n// };\n\nimport {\n  Icon,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ value, onChange, t }) => {\n  return (\n    <SearchForm>\n      <SearchFormInput\n        type=\"text\"\n        value={value}\n        debounceTimeout={500}\n        onChange={onChange}\n        autoFocus\n        placeholder={t('moviesPage.placeholder_search')}\n      />\n      <SearchFormBtn type=\"submit\">\n        <Icon size=\"24\" />\n      </SearchFormBtn>\n    </SearchForm>\n  );\n};\n\nSearchbar.propType = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  t: PropTypes.any.isRequired,\n};\n","import ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { getGenresMovies } from 'services/themoviedbAPI';\n\nconst animatedComponents = makeAnimated();\n\nexport const GenresSelect = ({ onSelect, t, lng }) => {\n  //console.log('GenresSelect:', lng);\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const customStyles = {\n    option: (defaultStyles, state) => ({\n      ...defaultStyles,\n      fontSize: '14px',\n      color: state.isSelected ? '#212529' : '#fd5523',\n      backgroundColor: state.isSelected\n        ? 'rgba(185, 228, 201, 0.773)'\n        : '#FFFBE6',\n    }),\n\n    control: defaultStyles => ({\n      ...defaultStyles,\n      backgroundColor: 'rgba(185, 228, 201, 0.773)',\n      border: 'none',\n      boxShadow: 'none',\n    }),\n    singleValue: defaultStyles => ({\n      ...defaultStyles,\n      color: '#FFF',\n      backgroundColor: '#fd5523',\n      borderRadius: '30px',\n      maxWidth: '45%',\n      padding: '5px 10px',\n      marginLeft: '30px',\n    }),\n  };\n\n  // genres\n  useEffect(() => {\n    // const abortController = new AbortController();\n    async function getGenres() {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // const genresData = await getGenresMovies(abortController);\n        // setError(null);\n        const genresData = await getGenresMovies(lng);\n        //console.log(genresData);\n        setGenres(genresData);\n      } catch (error) {\n        setError(`{t('moviesPage.set_error')}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getGenres();\n    // return () => abortController.abort();\n  }, [lng]);\n\n  const options = genres?.map(genre => ({\n    value: genre.id,\n    label: genre.name,\n  }));\n\n  return (\n    <>\n      <Select\n        options={options}\n        isLoading={isLoading}\n        onChange={option => (!option ? '' : onSelect(option.value))}\n        placeholder={t('moviesPage.placeholder_genres')}\n        components={animatedComponents}\n        isClearable={true}\n        styles={customStyles}\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n      />\n      {error && !isLoading && (\n        <ImageErrorView message={t('moviesPage.mistake')} />\n      )}\n    </>\n  );\n};\n\nGenresSelect.propTypes = {\n  lng: PropTypes.string.isRequired,\n  t: PropTypes.any.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// CAROUSEL SWIPER IMPORT\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/autoplay';\nimport 'swiper/css/scrollbar';\nimport { Autoplay, Scrollbar } from 'swiper';\n\nimport Grid2 from '@mui/material/Unstable_Grid2';\n\nimport {\n  ActorName,\n  AvatarWrap,\n  BackdropActors,\n  BackdropImg,\n  BgBlockActors,\n  BlockInfoActors,\n  GradientBlockBottom,\n  GradientBlockTop,\n  HeroContainer,\n  Known,\n  MoviesBlock,\n  Poster,\n  SectionActors,\n  SectionHero,\n  SmallText,\n  TitleList,\n} from './MoviesPage.styled';\n\n//import { InitialStateGallery } from 'components/InitialStateGallery/InitialStateGallery';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport {\n  getActorsPopular,\n  getMoviesByQuery,\n  getMoviesWithGenres,\n} from 'services/themoviedbAPI';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\n\nimport { Loader } from 'components/Loader/Loader';\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\nimport NoPoster from 'assets/no-poster.jpg';\nimport HeroPoster from 'assets/hero-poster.jpeg';\nimport ActorsBg from 'assets/actors-bg.png';\nimport { GenresSelect } from 'components/GenresSelect/GenresSelect';\nimport { Title } from 'components/Title/Title';\nimport { useTranslation } from 'react-i18next';\nimport Pagination from 'components/Pagination/Pagination';\n\nconst MoviesPage = props => {\n  const { lng } = props;\n  //console.log('Movies:', lng);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n\n  const [data, setData] = useState(null);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: 1,\n    query: '',\n  });\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const page = Number(params.page || 1);\n  let { query } = params;\n\n  //console.log(params);\n\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  // movies\n  useEffect(() => {\n    (async () => {\n      try {\n        setData(null);\n        const data = await getMoviesByQuery(page, query, lng);\n        //console.log(data.results);\n\n        setMovies(data.results);\n        setTotalPages(data.total_results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n    // return () => {\n    //   controller.abort();\n    // };\n  }, [page, query, location.search, lng]);\n\n  useEffect(() => {\n    const filtered = movies?.filter(movie =>\n      movie?.title?.toLowerCase().includes(query?.toLowerCase())\n    );\n    setFilteredMovies(filtered);\n  }, [movies, query]);\n\n  // actors\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const dataActors = await getActorsPopular(lng);\n        //console.log(data);\n        setActors(dataActors);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [lng]);\n\n  // get movies by genres\n  useEffect(() => {\n    if (!selectedGenre) return;\n\n    const fetchMovies = async (movieId, lng) => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setMovies([]);\n        const moviesData = await getMoviesWithGenres(movieId, lng);\n        setData(moviesData.results);\n      } catch (error) {\n        setData(null);\n        setError(<ImageErrorView message={t('moviesPage.mistake')} />);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies(selectedGenre, lng);\n  }, [lng, selectedGenre, t]);\n\n  if (!actors) {\n    return <div>{t('loading')}</div>;\n  }\n\n  const handleSearchChange = e => {\n    const inputValue = e.target.value;\n    query = inputValue;\n    setSearchParams({ page: 1, query: query });\n\n    // clear selected genre when input is changed\n    if (selectedGenre) {\n      setSelectedGenre(null);\n    }\n  };\n\n  // console.log(movies);\n  return (\n    <>\n      {/* <HeroBanner movies={movies} /> */}\n      <MoviesBlock>\n        <SectionHero>\n          <HeroContainer>\n            <GradientBlockTop></GradientBlockTop>\n\n            <BackdropImg>\n              <img src={HeroPoster} alt=\"poster opacity\" width=\"1200\" />\n            </BackdropImg>\n\n            <GradientBlockBottom></GradientBlockBottom>\n          </HeroContainer>\n        </SectionHero>\n        {/* ПОШУК ФІЛЬМІВ */}\n        <Searchbar value={query} onChange={handleSearchChange} t={t} />\n        <GenresSelect onSelect={setSelectedGenre} t={t} lng={lng} />\n\n        {isLoading && <Loader />}\n        {/*  якщо запит відбувся з помилкою - рендериться дефолтне зображення з повідомленням помилки */}\n        {error && <ImageErrorView message={t('moviesPage.mistake')} />}\n\n        {/* якщо при запиті зображення не знайдені - рендериться дефолтне зображення з повідомленням */}\n        {totalPages === 0 && data === null && (\n          <ImageErrorView message={t('moviesPage.not_found')} />\n        )}\n\n        {!error && !isLoading && !query && selectedGenre === null && (\n          <>\n            <Title title={t('actorsPage.expected')} />\n            <MovieGallery movies={movies} lng={lng} />\n          </>\n        )}\n\n        {!error && query && !isLoading && (\n          <MovieGallery movies={filteredMovies} lng={lng} />\n        )}\n\n        {movies.length > 0 && !isLoading && page <= totalPages && (\n          <Pagination\n            pageCount={totalPages}\n            setSearchParams={setSearchParams}\n            params={params}\n            currentPage={page - 1}\n          />\n        )}\n\n        {/* рендер галереї зображень за жанрами*/}\n        {!error && !isLoading && data && (\n          <>\n            <Title title={t('moviesPage.trend_list')} />\n            <MovieGallery movies={data} lng={lng} />\n          </>\n        )}\n\n        {/* якщо запит успішний  - рендериться галерея зображень акторів*/}\n        {actors && (\n          <>\n            <BlockInfoActors>\n              <TitleList>{t('moviesPage.persons_list')}</TitleList>\n\n              <SmallText>\n                <small>{t('moviesPage.description_persons_list')}</small>\n              </SmallText>\n            </BlockInfoActors>\n\n            <SectionActors>\n              <BackdropActors>\n                <GradientBlockTop></GradientBlockTop>\n\n                <BgBlockActors>\n                  <img src={ActorsBg} alt=\"poster opacity\" width=\"1200\" />\n                </BgBlockActors>\n\n                <GradientBlockBottom></GradientBlockBottom>\n              </BackdropActors>\n            </SectionActors>\n            <Grid2\n              container\n              spacing={1}\n              rowSpacing={1}\n              component=\"section\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid2 container spacing={1}>\n                <Swiper\n                  centeredSlides={true}\n                  spaceBetween={30}\n                  scrollbar={{\n                    hide: true,\n                  }}\n                  modules={[Autoplay, Scrollbar]}\n                  className=\"mySwiper\"\n                  loop={true}\n                  autoplay={{\n                    delay: 2000,\n                    disableOnInteraction: false,\n                  }}\n                  breakpoints={{\n                    // when window width is >= 320px\n                    320: {\n                      slidesPerView: 2,\n                      spaceBetween: 0,\n                    },\n                    // when window width is >= 640px\n                    640: {\n                      slidesPerView: 6,\n                      spaceBetween: 20,\n                    },\n                    // when window width is >= 1040px\n                    1040: {\n                      slidesPerView: 8,\n                      spaceBetween: 50,\n                    },\n                  }}\n                >\n                  {actors.map(({ id, profile_path, name, known_for }) => {\n                    return (\n                      <SwiperSlide key={id}>\n                        <Link\n                          to={`/actors/${id}`}\n                          state={{ from: location }}\n                          key={id}\n                        >\n                          <AvatarWrap>\n                            <Poster\n                              src={\n                                profile_path\n                                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                                  : `https://image.tmdb.org/t/p/w300${NoPoster}`\n                              }\n                              alt={name}\n                            />\n                          </AvatarWrap>\n\n                          <ActorName>{name}</ActorName>\n                          {known_for[0] && (\n                            <>\n                              <Known>{known_for[0].title}</Known>\n                            </>\n                          )}\n                        </Link>\n                      </SwiperSlide>\n                    );\n                  })}\n                </Swiper>\n              </Grid2>\n            </Grid2>\n          </>\n        )}\n      </MoviesBlock>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["MoviesBlock","styled","theme","space","fontSizes","s","xl","AvatarWrap","props","radii","normal","m","colors","accent","shadows","textShadow","secondary","Poster","BackdropImg","BgBlockActors","BackdropActors","GradientBlockTop","gradientBlock","GradientBlockBottom","gradientHeroBanner","SectionHero","SectionActors","BlockInfoActors","HeroContainer","ActorName","cardsTextColor","xs","Known","TitleList","fonts","heading","l","SmallText","SearchForm","Icon","HiMagnifyingGlass","white","SearchFormBtn","SearchFormInput","DebounceInput","Searchbar","value","onChange","t","type","debounceTimeout","autoFocus","placeholder","size","propType","PropTypes","animatedComponents","makeAnimated","GenresSelect","onSelect","lng","useState","genres","setGenres","isLoading","setIsLoading","error","setError","customStyles","option","defaultStyles","state","fontSize","color","isSelected","backgroundColor","control","border","boxShadow","singleValue","borderRadius","maxWidth","padding","marginLeft","useEffect","getGenresMovies","genresData","getGenres","options","map","genre","id","label","name","components","isClearable","styles","className","classNamePrefix","ImageErrorView","message","movies","setMovies","filteredMovies","setFilteredMovies","actors","setActors","totalPages","setTotalPages","data","setData","selectedGenre","setSelectedGenre","useSearchParams","page","query","searchParams","setSearchParams","params","useMemo","Object","fromEntries","Number","location","useLocation","useTranslation","getMoviesByQuery","results","total_results","search","filtered","filter","movie","title","toLowerCase","includes","getActorsPopular","dataActors","fetchMovies","movieId","getMoviesWithGenres","moviesData","src","HeroPoster","alt","width","e","inputValue","target","Loader","Title","MovieGallery","length","Pagination","pageCount","currentPage","ActorsBg","Grid2","container","spacing","rowSpacing","component","display","justifyContent","alignItems","centeredSlides","spaceBetween","scrollbar","hide","modules","Autoplay","Scrollbar","loop","autoplay","delay","disableOnInteraction","breakpoints","slidesPerView","profile_path","known_for","to","from","NoPoster"],"sourceRoot":""}